============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.2.0
rootdir: /home/jake/Development/exercism-python
configfile: pytest.ini
plugins: mock-3.11.1, reportlog-0.4.0, repeat-0.9.1
collected 10 items

exercises/practice/connect/connect_test.py FFFFFFFFFF                    [100%]

=================================== FAILURES ===================================
________________ ConnectTest.test_an_empty_board_has_no_winner _________________

self = <connect_test.ConnectTest testMethod=test_an_empty_board_has_no_winner>

    def test_an_empty_board_has_no_winner(self):
        game = ConnectGame(
            """. . . . .
                . . . . .
                 . . . . .
                  . . . . .
                   . . . . ."""
        )
        winner = game.get_winner()
>       self.assertEqual(winner, "")
E       AssertionError: None != ''

exercises/practice/connect/connect_test.py:22: AssertionError
___________ ConnectTest.test_illegal_diagonal_does_not_make_a_winner ___________

self = <connect_test.ConnectTest testMethod=test_illegal_diagonal_does_not_make_a_winner>

    def test_illegal_diagonal_does_not_make_a_winner(self):
        game = ConnectGame(
            """X O . .
                O X X X
                 O X O .
                  . O X .
                   X X O O"""
        )
        winner = game.get_winner()
>       self.assertEqual(winner, "")
E       AssertionError: None != ''

exercises/practice/connect/connect_test.py:53: AssertionError
____________ ConnectTest.test_nobody_wins_crossing_adjacent_angles _____________

self = <connect_test.ConnectTest testMethod=test_nobody_wins_crossing_adjacent_angles>

    def test_nobody_wins_crossing_adjacent_angles(self):
        game = ConnectGame(
            """X . . .
                . X O .
                 O . X O
                  . O . X
                   . . O ."""
        )
        winner = game.get_winner()
>       self.assertEqual(winner, "")
E       AssertionError: None != ''

exercises/practice/connect/connect_test.py:64: AssertionError
__________________ ConnectTest.test_o_can_win_on_a_1x1_board ___________________

self = <connect_test.ConnectTest testMethod=test_o_can_win_on_a_1x1_board>

    def test_o_can_win_on_a_1x1_board(self):
        game = ConnectGame("""O""")
        winner = game.get_winner()
>       self.assertEqual(winner, "O")
E       AssertionError: None != 'O'

exercises/practice/connect/connect_test.py:32: AssertionError
_____________ ConnectTest.test_o_wins_crossing_from_top_to_bottom ______________

self = <connect_test.ConnectTest testMethod=test_o_wins_crossing_from_top_to_bottom>

    def test_o_wins_crossing_from_top_to_bottom(self):
        game = ConnectGame(
            """. O . .
                O X X X
                 O O O .
                  X X O X
                   . O X ."""
        )
        winner = game.get_winner()
>       self.assertEqual(winner, "O")
E       AssertionError: None != 'O'

exercises/practice/connect/connect_test.py:86: AssertionError
______________ ConnectTest.test_only_edges_does_not_make_a_winner ______________

self = <connect_test.ConnectTest testMethod=test_only_edges_does_not_make_a_winner>

    def test_only_edges_does_not_make_a_winner(self):
        game = ConnectGame(
            """O O O X
                X . . X
                 X . . X
                  X O O O"""
        )
        winner = game.get_winner()
>       self.assertEqual(winner, "")
E       AssertionError: None != ''

exercises/practice/connect/connect_test.py:42: AssertionError
__________________ ConnectTest.test_x_can_win_on_a_1x1_board ___________________

self = <connect_test.ConnectTest testMethod=test_x_can_win_on_a_1x1_board>

    def test_x_can_win_on_a_1x1_board(self):
        game = ConnectGame("""X""")
        winner = game.get_winner()
>       self.assertEqual(winner, "X")
E       AssertionError: None != 'X'

exercises/practice/connect/connect_test.py:27: AssertionError
_____________ ConnectTest.test_x_wins_crossing_from_left_to_right ______________

self = <connect_test.ConnectTest testMethod=test_x_wins_crossing_from_left_to_right>

    def test_x_wins_crossing_from_left_to_right(self):
        game = ConnectGame(
            """. O . .
                O X X X
                 O X O .
                  X X O X
                   . O X ."""
        )
        winner = game.get_winner()
>       self.assertEqual(winner, "X")
E       AssertionError: None != 'X'

exercises/practice/connect/connect_test.py:75: AssertionError
_______________ ConnectTest.test_x_wins_using_a_convoluted_path ________________

self = <connect_test.ConnectTest testMethod=test_x_wins_using_a_convoluted_path>

    def test_x_wins_using_a_convoluted_path(self):
        game = ConnectGame(
            """. X X . .
                X . X . X
                 . X . X .
                  . X X . .
                   O O O O O"""
        )
        winner = game.get_winner()
>       self.assertEqual(winner, "X")
E       AssertionError: None != 'X'

exercises/practice/connect/connect_test.py:97: AssertionError
_________________ ConnectTest.test_x_wins_using_a_spiral_path __________________

self = <connect_test.ConnectTest testMethod=test_x_wins_using_a_spiral_path>

    def test_x_wins_using_a_spiral_path(self):
        game = ConnectGame(
            """O X X X X X X X X
                O X O O O O O O O
                 O X O X X X X X O
                  O X O X O O O X O
                   O X O X X X O X O
                    O X O O O X O X O
                     O X X X X X O X O
                      O O O O O O O X O
                       X X X X X X X X O"""
        )
        winner = game.get_winner()
>       self.assertEqual(winner, "X")
E       AssertionError: None != 'X'

exercises/practice/connect/connect_test.py:112: AssertionError
=========================== short test summary info ============================
FAILED exercises/practice/connect/connect_test.py::ConnectTest::test_an_empty_board_has_no_winner
FAILED exercises/practice/connect/connect_test.py::ConnectTest::test_illegal_diagonal_does_not_make_a_winner
FAILED exercises/practice/connect/connect_test.py::ConnectTest::test_nobody_wins_crossing_adjacent_angles
FAILED exercises/practice/connect/connect_test.py::ConnectTest::test_o_can_win_on_a_1x1_board
FAILED exercises/practice/connect/connect_test.py::ConnectTest::test_o_wins_crossing_from_top_to_bottom
FAILED exercises/practice/connect/connect_test.py::ConnectTest::test_only_edges_does_not_make_a_winner
FAILED exercises/practice/connect/connect_test.py::ConnectTest::test_x_can_win_on_a_1x1_board
FAILED exercises/practice/connect/connect_test.py::ConnectTest::test_x_wins_crossing_from_left_to_right
FAILED exercises/practice/connect/connect_test.py::ConnectTest::test_x_wins_using_a_convoluted_path
FAILED exercises/practice/connect/connect_test.py::ConnectTest::test_x_wins_using_a_spiral_path
============================== 10 failed in 0.07s ==============================
