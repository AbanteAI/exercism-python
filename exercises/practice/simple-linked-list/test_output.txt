============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.2.0
rootdir: /home/jake/Development/exercism-python
configfile: pytest.ini
plugins: mock-3.11.1, reportlog-0.4.0, repeat-0.9.1
collected 20 items

exercises/practice/simple-linked-list/simple_linked_list_test.py FF..FFF [ 35%]
FFFFFFFFFFFFF                                                            [100%]

=================================== FAILURES ===================================
____________ SimpleLinkedListTest.test_can_pop_from_non_empty_list _____________

self = <simple_linked_list_test.SimpleLinkedListTest testMethod=test_can_pop_from_non_empty_list>

    def test_can_pop_from_non_empty_list(self):
        sut = LinkedList([3, 4, 5])
>       self.assertEqual(sut.pop(), 5)
E       AssertionError: None != 5

exercises/practice/simple-linked-list/simple_linked_list_test.py:49: AssertionError
_____________ SimpleLinkedListTest.test_can_push_to_non_empty_list _____________

self = <simple_linked_list_test.SimpleLinkedListTest testMethod=test_can_push_to_non_empty_list>

    def test_can_push_to_non_empty_list(self):
        sut = LinkedList([1, 2, 3])
        sut.push(4)
>       self.assertEqual(len(sut), 4)
E       AssertionError: 0 != 4

exercises/practice/simple-linked-list/simple_linked_list_test.py:39: AssertionError
______________ SimpleLinkedListTest.test_error_on_empty_list_head ______________

self = <simple_linked_list_test.SimpleLinkedListTest testMethod=test_error_on_empty_list_head>

    def test_error_on_empty_list_head(self):
        sut = LinkedList()
>       with self.assertRaises(EmptyListException) as err:
E       AssertionError: EmptyListException not raised

exercises/practice/simple-linked-list/simple_linked_list_test.py:23: AssertionError
______________ SimpleLinkedListTest.test_error_on_empty_list_pop _______________

self = <simple_linked_list_test.SimpleLinkedListTest testMethod=test_error_on_empty_list_pop>

    def test_error_on_empty_list_pop(self):
        sut = LinkedList()
>       with self.assertRaises(EmptyListException) as err:
E       AssertionError: EmptyListException not raised

exercises/practice/simple-linked-list/simple_linked_list_test.py:63: AssertionError
_ SimpleLinkedListTest.test_non_empty_linked_list_to_list_is_list_with_all_elements _

self = <simple_linked_list_test.SimpleLinkedListTest testMethod=test_non_empty_linked_list_to_list_is_list_with_all_elements>

    def test_non_empty_linked_list_to_list_is_list_with_all_elements(self):
        sut = LinkedList([1, 2, 3])
>       self.assertEqual(list(sut), [3, 2, 1])
E       AssertionError: Lists differ: [] != [3, 2, 1]
E       
E       Second list contains 3 additional elements.
E       First extra element 0:
E       3
E       
E       - []
E       + [3, 2, 1]

exercises/practice/simple-linked-list/simple_linked_list_test.py:102: AssertionError
__________ SimpleLinkedListTest.test_non_empty_list_has_correct_head ___________

self = <simple_linked_list_test.SimpleLinkedListTest testMethod=test_non_empty_list_has_correct_head>

    def test_non_empty_list_has_correct_head(self):
        sut = LinkedList([1, 2])
>       self.assertEqual(sut.head().value(), 2)
E       AttributeError: 'NoneType' object has no attribute 'value'

exercises/practice/simple-linked-list/simple_linked_list_test.py:34: AttributeError
___________ SimpleLinkedListTest.test_non_empty_list_has_correct_len ___________

self = <simple_linked_list_test.SimpleLinkedListTest testMethod=test_non_empty_list_has_correct_len>

    def test_non_empty_list_has_correct_len(self):
        sut = LinkedList([1, 2, 3])
>       self.assertEqual(len(sut), 3)
E       AssertionError: 0 != 3

exercises/practice/simple-linked-list/simple_linked_list_test.py:19: AssertionError
______________ SimpleLinkedListTest.test_non_empty_list_traverse _______________

self = <simple_linked_list_test.SimpleLinkedListTest testMethod=test_non_empty_list_traverse>

    def test_non_empty_list_traverse(self):
        sut = LinkedList(range(10))
        current = sut.head()
        for i in range(10):
>           self.assertEqual(current.value(), 9 - i)
E           AttributeError: 'NoneType' object has no attribute 'value'

exercises/practice/simple-linked-list/simple_linked_list_test.py:88: AttributeError
________ SimpleLinkedListTest.test_pop_from_singleton_list_removes_head ________

self = <simple_linked_list_test.SimpleLinkedListTest testMethod=test_pop_from_singleton_list_removes_head>

    def test_pop_from_singleton_list_removes_head(self):
        sut = LinkedList([1])
>       self.assertEqual(sut.pop(), 1)
E       AssertionError: None != 1

exercises/practice/simple-linked-list/simple_linked_list_test.py:55: AssertionError
____________________ SimpleLinkedListTest.test_push_and_pop ____________________

self = <simple_linked_list_test.SimpleLinkedListTest testMethod=test_push_and_pop>

    def test_push_and_pop(self):
        sut = LinkedList([1, 2])
        sut.push(3)
>       self.assertEqual(len(sut), 3)
E       AssertionError: 0 != 3

exercises/practice/simple-linked-list/simple_linked_list_test.py:71: AssertionError
_________ SimpleLinkedListTest.test_pushing_to_empty_list_changes_head _________

self = <simple_linked_list_test.SimpleLinkedListTest testMethod=test_pushing_to_empty_list_changes_head>

    def test_pushing_to_empty_list_changes_head(self):
        sut = LinkedList()
        sut.push(5)
>       self.assertEqual(len(sut), 1)
E       AssertionError: 0 != 1

exercises/practice/simple-linked-list/simple_linked_list_test.py:44: AssertionError
_______________ SimpleLinkedListTest.test_reverse_non_empty_list _______________

self = <simple_linked_list_test.SimpleLinkedListTest testMethod=test_reverse_non_empty_list>

    def test_reverse_non_empty_list(self):
        sut = LinkedList([1, 2, 3])
>       self.assertEqual(list(sut.reversed()), [1, 2, 3])
E       TypeError: 'NoneType' object is not iterable

exercises/practice/simple-linked-list/simple_linked_list_test.py:114: TypeError
_________ SimpleLinkedListTest.test_reversed_empty_list_is_empty_list __________

self = <simple_linked_list_test.SimpleLinkedListTest testMethod=test_reversed_empty_list_is_empty_list>

    def test_reversed_empty_list_is_empty_list(self):
        sut = LinkedList([])
>       self.assertEqual(list(sut.reversed()), [])
E       TypeError: 'NoneType' object is not iterable

exercises/practice/simple-linked-list/simple_linked_list_test.py:106: TypeError
________ SimpleLinkedListTest.test_reversed_singleton_list_is_same_list ________

self = <simple_linked_list_test.SimpleLinkedListTest testMethod=test_reversed_singleton_list_is_same_list>

    def test_reversed_singleton_list_is_same_list(self):
        sut = LinkedList([1])
>       self.assertEqual(list(sut.reversed()), [1])
E       TypeError: 'NoneType' object is not iterable

exercises/practice/simple-linked-list/simple_linked_list_test.py:110: TypeError
_ SimpleLinkedListTest.test_singleton_linked_list_to_list_list_with_singular_element _

self = <simple_linked_list_test.SimpleLinkedListTest testMethod=test_singleton_linked_list_to_list_list_with_singular_element>

    def test_singleton_linked_list_to_list_list_with_singular_element(self):
        sut = LinkedList([1])
>       self.assertEqual(list(sut), [1])
E       AssertionError: Lists differ: [] != [1]
E       
E       Second list contains 1 additional elements.
E       First extra element 0:
E       1
E       
E       - []
E       + [1]
E       ?  +

exercises/practice/simple-linked-list/simple_linked_list_test.py:98: AssertionError
______________ SimpleLinkedListTest.test_singleton_list_has_head _______________

self = <simple_linked_list_test.SimpleLinkedListTest testMethod=test_singleton_list_has_head>

    def test_singleton_list_has_head(self):
        sut = LinkedList([1])
>       self.assertEqual(sut.head().value(), 1)
E       AttributeError: 'NoneType' object has no attribute 'value'

exercises/practice/simple-linked-list/simple_linked_list_test.py:30: AttributeError
_____________ SimpleLinkedListTest.test_singleton_list_has_len_one _____________

self = <simple_linked_list_test.SimpleLinkedListTest testMethod=test_singleton_list_has_len_one>

    def test_singleton_list_has_len_one(self):
        sut = LinkedList([1])
>       self.assertEqual(len(sut), 1)
E       AssertionError: 0 != 1

exercises/practice/simple-linked-list/simple_linked_list_test.py:15: AssertionError
__________ SimpleLinkedListTest.test_singleton_list_head_has_no_next ___________

self = <simple_linked_list_test.SimpleLinkedListTest testMethod=test_singleton_list_head_has_no_next>

    def test_singleton_list_head_has_no_next(self):
        sut = LinkedList([1])
>       self.assertIsNone(sut.head().next())
E       AttributeError: 'NoneType' object has no attribute 'next'

exercises/practice/simple-linked-list/simple_linked_list_test.py:82: AttributeError
=========================== short test summary info ============================
FAILED exercises/practice/simple-linked-list/simple_linked_list_test.py::SimpleLinkedListTest::test_can_pop_from_non_empty_list
FAILED exercises/practice/simple-linked-list/simple_linked_list_test.py::SimpleLinkedListTest::test_can_push_to_non_empty_list
FAILED exercises/practice/simple-linked-list/simple_linked_list_test.py::SimpleLinkedListTest::test_error_on_empty_list_head
FAILED exercises/practice/simple-linked-list/simple_linked_list_test.py::SimpleLinkedListTest::test_error_on_empty_list_pop
FAILED exercises/practice/simple-linked-list/simple_linked_list_test.py::SimpleLinkedListTest::test_non_empty_linked_list_to_list_is_list_with_all_elements
FAILED exercises/practice/simple-linked-list/simple_linked_list_test.py::SimpleLinkedListTest::test_non_empty_list_has_correct_head
FAILED exercises/practice/simple-linked-list/simple_linked_list_test.py::SimpleLinkedListTest::test_non_empty_list_has_correct_len
FAILED exercises/practice/simple-linked-list/simple_linked_list_test.py::SimpleLinkedListTest::test_non_empty_list_traverse
FAILED exercises/practice/simple-linked-list/simple_linked_list_test.py::SimpleLinkedListTest::test_pop_from_singleton_list_removes_head
FAILED exercises/practice/simple-linked-list/simple_linked_list_test.py::SimpleLinkedListTest::test_push_and_pop
FAILED exercises/practice/simple-linked-list/simple_linked_list_test.py::SimpleLinkedListTest::test_pushing_to_empty_list_changes_head
FAILED exercises/practice/simple-linked-list/simple_linked_list_test.py::SimpleLinkedListTest::test_reverse_non_empty_list
FAILED exercises/practice/simple-linked-list/simple_linked_list_test.py::SimpleLinkedListTest::test_reversed_empty_list_is_empty_list
FAILED exercises/practice/simple-linked-list/simple_linked_list_test.py::SimpleLinkedListTest::test_reversed_singleton_list_is_same_list
FAILED exercises/practice/simple-linked-list/simple_linked_list_test.py::SimpleLinkedListTest::test_singleton_linked_list_to_list_list_with_singular_element
FAILED exercises/practice/simple-linked-list/simple_linked_list_test.py::SimpleLinkedListTest::test_singleton_list_has_head
FAILED exercises/practice/simple-linked-list/simple_linked_list_test.py::SimpleLinkedListTest::test_singleton_list_has_len_one
FAILED exercises/practice/simple-linked-list/simple_linked_list_test.py::SimpleLinkedListTest::test_singleton_list_head_has_no_next
========================= 18 failed, 2 passed in 0.12s =========================
