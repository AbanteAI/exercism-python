============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.3.0
rootdir: /home/jake/Development/mentat/tests/benchmarks/repos/exercism-python
configfile: pytest.ini
plugins: mock-3.11.1, reportlog-0.4.0, asyncio-0.21.1, xdist-3.3.1
asyncio: mode=strict
collected 17 items

exercises/practice/word-count/word_count_test.py F......F..F.F...F       [100%]

=================================== FAILURES ===================================
____ WordCountTest.test_alternating_word_separators_not_detected_as_a_word _____

self = <word_count_test.WordCountTest testMethod=test_alternating_word_separators_not_detected_as_a_word>

    def test_alternating_word_separators_not_detected_as_a_word(self):
>       self.assertEqual(
            count_words(",\n,one,\n ,two \n 'three'"), {"one": 1, "two": 1, "three": 1}
        )
E       AssertionError: {'one': 1, 'two': 1, "three'": 1} != {'one': 1, 'two': 1, 'three': 1}
E       - {'one': 1, "three'": 1, 'two': 1}
E       ?            ^      -
E       
E       + {'one': 1, 'three': 1, 'two': 1}
E       ?            ^

exercises/practice/word-count/word_count_test.py:89: AssertionError
_______________ WordCountTest.test_multiple_apostrophes_ignored ________________

self = <word_count_test.WordCountTest testMethod=test_multiple_apostrophes_ignored>

    def test_multiple_apostrophes_ignored(self):
>       self.assertEqual(count_words("''hey''"), {"hey": 1})
E       AssertionError: {"hey''": 1} != {'hey': 1}
E       - {"hey''": 1}
E       ?  ^    --
E       
E       + {'hey': 1}
E       ?  ^

exercises/practice/word-count/word_count_test.py:125: AssertionError
_____________________ WordCountTest.test_non_alphanumeric ______________________

self = <word_count_test.WordCountTest testMethod=test_non_alphanumeric>

    def test_non_alphanumeric(self):
>       self.assertEqual(
            count_words("hey,my_spacebar_is_broken"),
            {"hey": 1, "my": 1, "spacebar": 1, "is": 1, "broken": 1},
        )
E       AssertionError: {'hey': 1, 'my_spacebar_is_broken': 1} != {'hey': 1, 'my': 1, 'spacebar': 1, 'is': 1, 'broken': 1}
E       - {'hey': 1, 'my_spacebar_is_broken': 1}
E       + {'broken': 1, 'hey': 1, 'is': 1, 'my': 1, 'spacebar': 1}

exercises/practice/word-count/word_count_test.py:119: AssertionError
____________ WordCountTest.test_quotation_for_word_with_apostrophe _____________

self = <word_count_test.WordCountTest testMethod=test_quotation_for_word_with_apostrophe>

    def test_quotation_for_word_with_apostrophe(self):
>       self.assertEqual(count_words("can, can't, 'can't'"), {"can": 1, "can't": 2})
E       AssertionError: {'can': 1, "can't": 1, "can't'": 1} != {'can': 1, "can't": 2}
E       - {'can': 1, "can't": 1, "can't'": 1}
E       + {'can': 1, "can't": 2}

exercises/practice/word-count/word_count_test.py:94: AssertionError
______________________ WordCountTest.test_with_quotations ______________________

self = <word_count_test.WordCountTest testMethod=test_with_quotations>

    def test_with_quotations(self):
>       self.assertEqual(
            count_words("Joe can't tell between 'large' and large."),
            {"joe": 1, "can't": 1, "tell": 1, "between": 1, "large": 2, "and": 1},
        )
E       AssertionError: {'joe[14 chars] 1, 'tell': 1, 'between': 1, "large'": 1, 'and': 1, 'large': 1} != {'joe[14 chars] 1, 'tell': 1, 'between': 1, 'large': 2, 'and': 1}
E       + {'and': 1, 'between': 1, "can't": 1, 'joe': 1, 'large': 2, 'tell': 1}
E       - {'and': 1,
E       -  'between': 1,
E       -  "can't": 1,
E       -  'joe': 1,
E       -  'large': 1,
E       -  "large'": 1,
E       -  'tell': 1}

exercises/practice/word-count/word_count_test.py:63: AssertionError
=========================== short test summary info ============================
FAILED exercises/practice/word-count/word_count_test.py::WordCountTest::test_alternating_word_separators_not_detected_as_a_word
FAILED exercises/practice/word-count/word_count_test.py::WordCountTest::test_multiple_apostrophes_ignored
FAILED exercises/practice/word-count/word_count_test.py::WordCountTest::test_non_alphanumeric
FAILED exercises/practice/word-count/word_count_test.py::WordCountTest::test_quotation_for_word_with_apostrophe
FAILED exercises/practice/word-count/word_count_test.py::WordCountTest::test_with_quotations
========================= 5 failed, 12 passed in 0.08s =========================
