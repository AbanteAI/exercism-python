============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.2.0
rootdir: /home/jake/Development/exercism-python
configfile: pytest.ini
plugins: mock-3.11.1, reportlog-0.4.0, repeat-0.9.1
collected 20 items

exercises/practice/say/say_test.py FFFF..FF.FFFFFFFFF.F                  [100%]

=================================== FAILURES ===================================
__________________________ SayTest.test_a_big_number ___________________________

self = <say_test.SayTest testMethod=test_a_big_number>

    def test_a_big_number(self):
        self.assertEqual(
>           say(987654321123),
            "nine hundred eighty-seven billion six hundred fifty-four million three hundred twenty-one thousand one hundred twenty-three",
        )

exercises/practice/say/say_test.py:65: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/say/say.py:47: in say
    return insert_scale_words(chunks)
exercises/practice/say/say.py:40: in insert_scale_words
    result.append(f"{handle_basic_case(chunk)} {scale_words[len(chunks) - 1 - i]}")
exercises/practice/say/say.py:26: in handle_basic_case
    return handle_hundreds_case(number)
exercises/practice/say/say.py:19: in handle_hundreds_case
    result += " " + handle_basic_case(remainder)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number = 87

    def handle_basic_case(number):
        if number < 100:
>           return handle_tens_case(number)
E           NameError: name 'handle_tens_case' is not defined

exercises/practice/say/say.py:24: NameError
____________________________ SayTest.test_fourteen _____________________________

self = <say_test.SayTest testMethod=test_fourteen>

    def test_fourteen(self):
>       self.assertEqual(say(14), "fourteen")

exercises/practice/say/say_test.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/say/say.py:47: in say
    return insert_scale_words(chunks)
exercises/practice/say/say.py:40: in insert_scale_words
    result.append(f"{handle_basic_case(chunk)} {scale_words[len(chunks) - 1 - i]}")
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number = 14

    def handle_basic_case(number):
        if number < 100:
>           return handle_tens_case(number)
E           NameError: name 'handle_tens_case' is not defined

exercises/practice/say/say.py:24: NameError
____________________ SayTest.test_nine_hundred_ninety_nine _____________________

self = <say_test.SayTest testMethod=test_nine_hundred_ninety_nine>

    def test_nine_hundred_ninety_nine(self):
>       self.assertEqual(say(999), "nine hundred ninety-nine")

exercises/practice/say/say_test.py:44: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/say/say.py:47: in say
    return insert_scale_words(chunks)
exercises/practice/say/say.py:40: in insert_scale_words
    result.append(f"{handle_basic_case(chunk)} {scale_words[len(chunks) - 1 - i]}")
exercises/practice/say/say.py:26: in handle_basic_case
    return handle_hundreds_case(number)
exercises/practice/say/say.py:19: in handle_hundreds_case
    result += " " + handle_basic_case(remainder)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number = 99

    def handle_basic_case(number):
        if number < 100:
>           return handle_tens_case(number)
E           NameError: name 'handle_tens_case' is not defined

exercises/practice/say/say.py:24: NameError
___________________________ SayTest.test_ninety_nine ___________________________

self = <say_test.SayTest testMethod=test_ninety_nine>

    def test_ninety_nine(self):
>       self.assertEqual(say(99), "ninety-nine")

exercises/practice/say/say_test.py:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/say/say.py:47: in say
    return insert_scale_words(chunks)
exercises/practice/say/say.py:40: in insert_scale_words
    result.append(f"{handle_basic_case(chunk)} {scale_words[len(chunks) - 1 - i]}")
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number = 99

    def handle_basic_case(number):
        if number < 100:
>           return handle_tens_case(number)
E           NameError: name 'handle_tens_case' is not defined

exercises/practice/say/say.py:24: NameError
_______________________________ SayTest.test_one _______________________________

self = <say_test.SayTest testMethod=test_one>

    def test_one(self):
>       self.assertEqual(say(1), "one")

exercises/practice/say/say_test.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/say/say.py:47: in say
    return insert_scale_words(chunks)
exercises/practice/say/say.py:40: in insert_scale_words
    result.append(f"{handle_basic_case(chunk)} {scale_words[len(chunks) - 1 - i]}")
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number = 1

    def handle_basic_case(number):
        if number < 100:
>           return handle_tens_case(number)
E           NameError: name 'handle_tens_case' is not defined

exercises/practice/say/say.py:24: NameError
___________________________ SayTest.test_one_billion ___________________________

self = <say_test.SayTest testMethod=test_one_billion>

    def test_one_billion(self):
>       self.assertEqual(say(1000000000), "one billion")

exercises/practice/say/say_test.py:61: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/say/say.py:47: in say
    return insert_scale_words(chunks)
exercises/practice/say/say.py:40: in insert_scale_words
    result.append(f"{handle_basic_case(chunk)} {scale_words[len(chunks) - 1 - i]}")
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number = 1

    def handle_basic_case(number):
        if number < 100:
>           return handle_tens_case(number)
E           NameError: name 'handle_tens_case' is not defined

exercises/practice/say/say.py:24: NameError
_______________________ SayTest.test_one_hundred_seventy _______________________

self = <say_test.SayTest testMethod=test_one_hundred_seventy>

    def test_one_hundred_seventy(self):
>       self.assertEqual(say(170), "one hundred seventy")

exercises/practice/say/say_test.py:85: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/say/say.py:47: in say
    return insert_scale_words(chunks)
exercises/practice/say/say.py:40: in insert_scale_words
    result.append(f"{handle_basic_case(chunk)} {scale_words[len(chunks) - 1 - i]}")
exercises/practice/say/say.py:26: in handle_basic_case
    return handle_hundreds_case(number)
exercises/practice/say/say.py:19: in handle_hundreds_case
    result += " " + handle_basic_case(remainder)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number = 70

    def handle_basic_case(number):
        if number < 100:
>           return handle_tens_case(number)
E           NameError: name 'handle_tens_case' is not defined

exercises/practice/say/say.py:24: NameError
____________________ SayTest.test_one_hundred_twenty_three _____________________

self = <say_test.SayTest testMethod=test_one_hundred_twenty_three>

    def test_one_hundred_twenty_three(self):
>       self.assertEqual(say(123), "one hundred twenty-three")

exercises/practice/say/say_test.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/say/say.py:47: in say
    return insert_scale_words(chunks)
exercises/practice/say/say.py:40: in insert_scale_words
    result.append(f"{handle_basic_case(chunk)} {scale_words[len(chunks) - 1 - i]}")
exercises/practice/say/say.py:26: in handle_basic_case
    return handle_hundreds_case(number)
exercises/practice/say/say.py:19: in handle_hundreds_case
    result += " " + handle_basic_case(remainder)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number = 23

    def handle_basic_case(number):
        if number < 100:
>           return handle_tens_case(number)
E           NameError: name 'handle_tens_case' is not defined

exercises/practice/say/say.py:24: NameError
___________________________ SayTest.test_one_million ___________________________

self = <say_test.SayTest testMethod=test_one_million>

    def test_one_million(self):
>       self.assertEqual(say(1000000), "one million")

exercises/practice/say/say_test.py:53: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/say/say.py:47: in say
    return insert_scale_words(chunks)
exercises/practice/say/say.py:40: in insert_scale_words
    result.append(f"{handle_basic_case(chunk)} {scale_words[len(chunks) - 1 - i]}")
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number = 1

    def handle_basic_case(number):
        if number < 100:
>           return handle_tens_case(number)
E           NameError: name 'handle_tens_case' is not defined

exercises/practice/say/say.py:24: NameError
________ SayTest.test_one_million_two_thousand_three_hundred_forty_five ________

self = <say_test.SayTest testMethod=test_one_million_two_thousand_three_hundred_forty_five>

    def test_one_million_two_thousand_three_hundred_forty_five(self):
        self.assertEqual(
>           say(1002345), "one million two thousand three hundred forty-five"
        )

exercises/practice/say/say_test.py:57: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/say/say.py:47: in say
    return insert_scale_words(chunks)
exercises/practice/say/say.py:40: in insert_scale_words
    result.append(f"{handle_basic_case(chunk)} {scale_words[len(chunks) - 1 - i]}")
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number = 1

    def handle_basic_case(number):
        if number < 100:
>           return handle_tens_case(number)
E           NameError: name 'handle_tens_case' is not defined

exercises/practice/say/say.py:24: NameError
__________________________ SayTest.test_one_thousand ___________________________

self = <say_test.SayTest testMethod=test_one_thousand>

    def test_one_thousand(self):
>       self.assertEqual(say(1000), "one thousand")

exercises/practice/say/say_test.py:47: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/say/say.py:47: in say
    return insert_scale_words(chunks)
exercises/practice/say/say.py:40: in insert_scale_words
    result.append(f"{handle_basic_case(chunk)} {scale_words[len(chunks) - 1 - i]}")
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number = 1

    def handle_basic_case(number):
        if number < 100:
>           return handle_tens_case(number)
E           NameError: name 'handle_tens_case' is not defined

exercises/practice/say/say.py:24: NameError
______________ SayTest.test_one_thousand_two_hundred_thirty_four _______________

self = <say_test.SayTest testMethod=test_one_thousand_two_hundred_thirty_four>

    def test_one_thousand_two_hundred_thirty_four(self):
>       self.assertEqual(say(1234), "one thousand two hundred thirty-four")

exercises/practice/say/say_test.py:50: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/say/say.py:47: in say
    return insert_scale_words(chunks)
exercises/practice/say/say.py:40: in insert_scale_words
    result.append(f"{handle_basic_case(chunk)} {scale_words[len(chunks) - 1 - i]}")
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number = 1

    def handle_basic_case(number):
        if number < 100:
>           return handle_tens_case(number)
E           NameError: name 'handle_tens_case' is not defined

exercises/practice/say/say.py:24: NameError
_____________________________ SayTest.test_thirty ______________________________

self = <say_test.SayTest testMethod=test_thirty>

    def test_thirty(self):
>       self.assertEqual(say(30), "thirty")

exercises/practice/say/say_test.py:29: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/say/say.py:47: in say
    return insert_scale_words(chunks)
exercises/practice/say/say.py:40: in insert_scale_words
    result.append(f"{handle_basic_case(chunk)} {scale_words[len(chunks) - 1 - i]}")
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number = 30

    def handle_basic_case(number):
        if number < 100:
>           return handle_tens_case(number)
E           NameError: name 'handle_tens_case' is not defined

exercises/practice/say/say.py:24: NameError
_____________________________ SayTest.test_twenty ______________________________

self = <say_test.SayTest testMethod=test_twenty>

    def test_twenty(self):
>       self.assertEqual(say(20), "twenty")

exercises/practice/say/say_test.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/say/say.py:47: in say
    return insert_scale_words(chunks)
exercises/practice/say/say.py:40: in insert_scale_words
    result.append(f"{handle_basic_case(chunk)} {scale_words[len(chunks) - 1 - i]}")
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number = 20

    def handle_basic_case(number):
        if number < 100:
>           return handle_tens_case(number)
E           NameError: name 'handle_tens_case' is not defined

exercises/practice/say/say.py:24: NameError
___________________________ SayTest.test_twenty_two ____________________________

self = <say_test.SayTest testMethod=test_twenty_two>

    def test_twenty_two(self):
>       self.assertEqual(say(22), "twenty-two")

exercises/practice/say/say_test.py:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/say/say.py:47: in say
    return insert_scale_words(chunks)
exercises/practice/say/say.py:40: in insert_scale_words
    result.append(f"{handle_basic_case(chunk)} {scale_words[len(chunks) - 1 - i]}")
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number = 22

    def handle_basic_case(number):
        if number < 100:
>           return handle_tens_case(number)
E           NameError: name 'handle_tens_case' is not defined

exercises/practice/say/say.py:24: NameError
______________________________ SayTest.test_zero _______________________________

self = <say_test.SayTest testMethod=test_zero>

    def test_zero(self):
>       self.assertEqual(say(0), "zero")
E       AssertionError: '' != 'zero'
E       + zero

exercises/practice/say/say_test.py:14: AssertionError
=========================== short test summary info ============================
FAILED exercises/practice/say/say_test.py::SayTest::test_a_big_number - NameE...
FAILED exercises/practice/say/say_test.py::SayTest::test_fourteen - NameError...
FAILED exercises/practice/say/say_test.py::SayTest::test_nine_hundred_ninety_nine
FAILED exercises/practice/say/say_test.py::SayTest::test_ninety_nine - NameEr...
FAILED exercises/practice/say/say_test.py::SayTest::test_one - NameError: nam...
FAILED exercises/practice/say/say_test.py::SayTest::test_one_billion - NameEr...
FAILED exercises/practice/say/say_test.py::SayTest::test_one_hundred_seventy
FAILED exercises/practice/say/say_test.py::SayTest::test_one_hundred_twenty_three
FAILED exercises/practice/say/say_test.py::SayTest::test_one_million - NameEr...
FAILED exercises/practice/say/say_test.py::SayTest::test_one_million_two_thousand_three_hundred_forty_five
FAILED exercises/practice/say/say_test.py::SayTest::test_one_thousand - NameE...
FAILED exercises/practice/say/say_test.py::SayTest::test_one_thousand_two_hundred_thirty_four
FAILED exercises/practice/say/say_test.py::SayTest::test_thirty - NameError: ...
FAILED exercises/practice/say/say_test.py::SayTest::test_twenty - NameError: ...
FAILED exercises/practice/say/say_test.py::SayTest::test_twenty_two - NameErr...
FAILED exercises/practice/say/say_test.py::SayTest::test_zero - AssertionErro...
========================= 16 failed, 4 passed in 0.11s =========================
