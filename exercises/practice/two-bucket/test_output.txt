============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.2.0
rootdir: /home/jake/Development/exercism-python
configfile: pytest.ini
plugins: mock-3.11.1, reportlog-0.4.0, repeat-0.9.1
collected 9 items

two-bucket/two_bucket_test.py F.FFFFFFF                                  [100%]

=================================== FAILURES ===================================
________ TwoBucketTest.test_goal_larger_than_both_buckets_is_impossible ________

self = <two_bucket_test.TwoBucketTest testMethod=test_goal_larger_than_both_buckets_is_impossible>

    def test_goal_larger_than_both_buckets_is_impossible(self):
        with self.assertRaisesWithMessage(ValueError):
>           measure(5, 7, 8, "one")

two-bucket/two_bucket_test.py:52: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
two-bucket/two_bucket.py:26: in measure
    current = pour(current[0], current[1]), pour(current[1], current[0])[::-1]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def pour(bucket_a, bucket_b):
>       poured = min(bucket_a[1], bucket_b[0] - bucket_b[1])
E       TypeError: unsupported operand type(s) for -: 'tuple' and 'tuple'

two-bucket/two_bucket.py:3: TypeError
_ TwoBucketTest.test_measure_using_bucket_one_of_size_2_and_bucket_two_of_size_3_start_with_bucket_one_and_end_with_bucket_two _

self = <two_bucket_test.TwoBucketTest testMethod=test_measure_using_bucket_one_of_size_2_and_bucket_two_of_size_3_start_with_bucket_one_and_end_with_bucket_two>

    def test_measure_using_bucket_one_of_size_2_and_bucket_two_of_size_3_start_with_bucket_one_and_end_with_bucket_two(
        self,
    ):
>       self.assertEqual(measure(2, 3, 3, "one"), (2, "two", 2))
E       AssertionError: Tuples differ: (1, 'one', 0) != (2, 'two', 2)
E       
E       First differing element 0:
E       1
E       2
E       
E       - (1, 'one', 0)
E       + (2, 'two', 2)

two-bucket/two_bucket_test.py:41: AssertionError
_ TwoBucketTest.test_measure_using_bucket_one_of_size_3_and_bucket_two_of_size_5_start_with_bucket_one _

self = <two_bucket_test.TwoBucketTest testMethod=test_measure_using_bucket_one_of_size_3_and_bucket_two_of_size_5_start_with_bucket_one>

    def test_measure_using_bucket_one_of_size_3_and_bucket_two_of_size_5_start_with_bucket_one(
        self,
    ):
>       self.assertEqual(measure(3, 5, 1, "one"), (4, "one", 5))

two-bucket/two_bucket_test.py:16: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
two-bucket/two_bucket.py:26: in measure
    current = pour(current[0], current[1]), pour(current[1], current[0])[::-1]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

bucket_a = ((3, 0), (5, 3)), bucket_b = ((3, 3), (5, 0))

    def pour(bucket_a, bucket_b):
>       poured = min(bucket_a[1], bucket_b[0] - bucket_b[1])
E       TypeError: unsupported operand type(s) for -: 'tuple' and 'tuple'

two-bucket/two_bucket.py:3: TypeError
_ TwoBucketTest.test_measure_using_bucket_one_of_size_3_and_bucket_two_of_size_5_start_with_bucket_two _

self = <two_bucket_test.TwoBucketTest testMethod=test_measure_using_bucket_one_of_size_3_and_bucket_two_of_size_5_start_with_bucket_two>

    def test_measure_using_bucket_one_of_size_3_and_bucket_two_of_size_5_start_with_bucket_two(
        self,
    ):
>       self.assertEqual(measure(3, 5, 1, "two"), (8, "two", 3))

two-bucket/two_bucket_test.py:21: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
two-bucket/two_bucket.py:26: in measure
    current = pour(current[0], current[1]), pour(current[1], current[0])[::-1]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

bucket_a = ((5, 2), (3, 3)), bucket_b = ((5, 5), (3, 0))

    def pour(bucket_a, bucket_b):
>       poured = min(bucket_a[1], bucket_b[0] - bucket_b[1])
E       TypeError: unsupported operand type(s) for -: 'tuple' and 'tuple'

two-bucket/two_bucket.py:3: TypeError
_ TwoBucketTest.test_measure_using_bucket_one_of_size_7_and_bucket_two_of_size_11_start_with_bucket_one _

self = <two_bucket_test.TwoBucketTest testMethod=test_measure_using_bucket_one_of_size_7_and_bucket_two_of_size_11_start_with_bucket_one>

    def test_measure_using_bucket_one_of_size_7_and_bucket_two_of_size_11_start_with_bucket_one(
        self,
    ):
>       self.assertEqual(measure(7, 11, 2, "one"), (14, "one", 11))

two-bucket/two_bucket_test.py:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
two-bucket/two_bucket.py:26: in measure
    current = pour(current[0], current[1]), pour(current[1], current[0])[::-1]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

bucket_a = ((7, 0), (11, 7)), bucket_b = ((7, 7), (11, 0))

    def pour(bucket_a, bucket_b):
>       poured = min(bucket_a[1], bucket_b[0] - bucket_b[1])
E       TypeError: unsupported operand type(s) for -: 'tuple' and 'tuple'

two-bucket/two_bucket.py:3: TypeError
_ TwoBucketTest.test_measure_using_bucket_one_of_size_7_and_bucket_two_of_size_11_start_with_bucket_two _

self = <two_bucket_test.TwoBucketTest testMethod=test_measure_using_bucket_one_of_size_7_and_bucket_two_of_size_11_start_with_bucket_two>

    def test_measure_using_bucket_one_of_size_7_and_bucket_two_of_size_11_start_with_bucket_two(
        self,
    ):
>       self.assertEqual(measure(7, 11, 2, "two"), (18, "two", 7))

two-bucket/two_bucket_test.py:31: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
two-bucket/two_bucket.py:26: in measure
    current = pour(current[0], current[1]), pour(current[1], current[0])[::-1]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

bucket_a = ((11, 4), (7, 7)), bucket_b = ((11, 11), (7, 0))

    def pour(bucket_a, bucket_b):
>       poured = min(bucket_a[1], bucket_b[0] - bucket_b[1])
E       TypeError: unsupported operand type(s) for -: 'tuple' and 'tuple'

two-bucket/two_bucket.py:3: TypeError
______________ TwoBucketTest.test_not_possible_to_reach_the_goal _______________

self = <two_bucket_test.TwoBucketTest testMethod=test_not_possible_to_reach_the_goal>

    def test_not_possible_to_reach_the_goal(self):
        with self.assertRaisesWithMessage(ValueError):
>           measure(6, 15, 5, "one")

two-bucket/two_bucket_test.py:45: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
two-bucket/two_bucket.py:26: in measure
    current = pour(current[0], current[1]), pour(current[1], current[0])[::-1]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def pour(bucket_a, bucket_b):
>       poured = min(bucket_a[1], bucket_b[0] - bucket_b[1])
E       TypeError: unsupported operand type(s) for -: 'tuple' and 'tuple'

two-bucket/two_bucket.py:3: TypeError
_ TwoBucketTest.test_with_the_same_buckets_but_a_different_goal_then_it_is_possible _

self = <two_bucket_test.TwoBucketTest testMethod=test_with_the_same_buckets_but_a_different_goal_then_it_is_possible>

    def test_with_the_same_buckets_but_a_different_goal_then_it_is_possible(self):
>       self.assertEqual(measure(6, 15, 9, "one"), (10, "two", 0))

two-bucket/two_bucket_test.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
two-bucket/two_bucket.py:26: in measure
    current = pour(current[0], current[1]), pour(current[1], current[0])[::-1]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

bucket_a = ((6, 0), (15, 6)), bucket_b = ((6, 6), (15, 0))

    def pour(bucket_a, bucket_b):
>       poured = min(bucket_a[1], bucket_b[0] - bucket_b[1])
E       TypeError: unsupported operand type(s) for -: 'tuple' and 'tuple'

two-bucket/two_bucket.py:3: TypeError
=========================== short test summary info ============================
FAILED two-bucket/two_bucket_test.py::TwoBucketTest::test_goal_larger_than_both_buckets_is_impossible
FAILED two-bucket/two_bucket_test.py::TwoBucketTest::test_measure_using_bucket_one_of_size_2_and_bucket_two_of_size_3_start_with_bucket_one_and_end_with_bucket_two
FAILED two-bucket/two_bucket_test.py::TwoBucketTest::test_measure_using_bucket_one_of_size_3_and_bucket_two_of_size_5_start_with_bucket_one
FAILED two-bucket/two_bucket_test.py::TwoBucketTest::test_measure_using_bucket_one_of_size_3_and_bucket_two_of_size_5_start_with_bucket_two
FAILED two-bucket/two_bucket_test.py::TwoBucketTest::test_measure_using_bucket_one_of_size_7_and_bucket_two_of_size_11_start_with_bucket_one
FAILED two-bucket/two_bucket_test.py::TwoBucketTest::test_measure_using_bucket_one_of_size_7_and_bucket_two_of_size_11_start_with_bucket_two
FAILED two-bucket/two_bucket_test.py::TwoBucketTest::test_not_possible_to_reach_the_goal
FAILED two-bucket/two_bucket_test.py::TwoBucketTest::test_with_the_same_buckets_but_a_different_goal_then_it_is_possible
========================= 8 failed, 1 passed in 0.06s ==========================
