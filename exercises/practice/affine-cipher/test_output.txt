============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.2.0
rootdir: /home/jake/Development/exercism-python
configfile: pytest.ini
plugins: mock-3.11.1, reportlog-0.4.0, repeat-0.9.1
collected 16 items

exercises/practice/affine-cipher/affine_cipher_test.py FFFFFFFFFFFFFFFF  [100%]

=================================== FAILURES ===================================
___________________ AffineCipherTest.test_decode_a_sentence ____________________

self = <affine_cipher_test.AffineCipherTest testMethod=test_decode_a_sentence>

    def test_decode_a_sentence(self):
>       self.assertEqual(
            decode("qdwju nqcro muwhn odqun oppmd aunwd o", 19, 16),
            "anobstacleisoftenasteppingstone",
        )
E       AssertionError: None != 'anobstacleisoftenasteppingstone'

exercises/practice/affine-cipher/affine_cipher_test.py:53: AssertionError
_________________ AffineCipherTest.test_decode_all_the_letters _________________

self = <affine_cipher_test.AffineCipherTest testMethod=test_decode_all_the_letters>

    def test_decode_all_the_letters(self):
>       self.assertEqual(
            decode("swxtj npvyk lruol iejdc blaxk swxmh qzglf", 17, 33),
            "thequickbrownfoxjumpsoverthelazydog",
        )
E       AssertionError: None != 'thequickbrownfoxjumpsoverthelazydog'

exercises/practice/affine-cipher/affine_cipher_test.py:62: AssertionError
____________________ AffineCipherTest.test_decode_exercism _____________________

self = <affine_cipher_test.AffineCipherTest testMethod=test_decode_exercism>

    def test_decode_exercism(self):
>       self.assertEqual(decode("tytgn fjr", 3, 7), "exercism")
E       AssertionError: None != 'exercism'

exercises/practice/affine-cipher/affine_cipher_test.py:50: AssertionError
_____________________ AffineCipherTest.test_decode_numbers _____________________

self = <affine_cipher_test.AffineCipherTest testMethod=test_decode_numbers>

    def test_decode_numbers(self):
>       self.assertEqual(decode("odpoz ub123 odpoz ub", 25, 7), "testing123testing")
E       AssertionError: None != 'testing123testing'

exercises/practice/affine-cipher/affine_cipher_test.py:59: AssertionError
_____________ AffineCipherTest.test_decode_with_a_not_coprime_to_m _____________

self = <affine_cipher_test.AffineCipherTest testMethod=test_decode_with_a_not_coprime_to_m>

    def test_decode_with_a_not_coprime_to_m(self):
>       with self.assertRaises(ValueError) as err:
E       AssertionError: ValueError not raised

exercises/practice/affine-cipher/affine_cipher_test.py:79: AssertionError
_____________ AffineCipherTest.test_decode_with_no_spaces_in_input _____________

self = <affine_cipher_test.AffineCipherTest testMethod=test_decode_with_no_spaces_in_input>

    def test_decode_with_no_spaces_in_input(self):
>       self.assertEqual(
            decode("swxtjnpvyklruoliejdcblaxkswxmhqzglf", 17, 33),
            "thequickbrownfoxjumpsoverthelazydog",
        )
E       AssertionError: None != 'thequickbrownfoxjumpsoverthelazydog'

exercises/practice/affine-cipher/affine_cipher_test.py:68: AssertionError
______________ AffineCipherTest.test_decode_with_too_many_spaces _______________

self = <affine_cipher_test.AffineCipherTest testMethod=test_decode_with_too_many_spaces>

    def test_decode_with_too_many_spaces(self):
>       self.assertEqual(
            decode("vszzm    cly   yd cg    qdp", 15, 16), "jollygreengiant"
        )
E       AssertionError: None != 'jollygreengiant'

exercises/practice/affine-cipher/affine_cipher_test.py:74: AssertionError
_________________ AffineCipherTest.test_encode_all_the_letters _________________

self = <affine_cipher_test.AffineCipherTest testMethod=test_encode_all_the_letters>

    def test_encode_all_the_letters(self):
>       self.assertEqual(
            encode("The quick brown fox jumps over the lazy dog.", 17, 33),
            "swxtj npvyk lruol iejdc blaxk swxmh qzglf",
        )
E       AssertionError: None != 'swxtj npvyk lruol iejdc blaxk swxmh qzglf'

exercises/practice/affine-cipher/affine_cipher_test.py:38: AssertionError
__________________ AffineCipherTest.test_encode_deep_thought ___________________

self = <affine_cipher_test.AffineCipherTest testMethod=test_encode_deep_thought>

    def test_encode_deep_thought(self):
>       self.assertEqual(encode("Truth is fiction.", 5, 17), "iynia fdqfb ifje")
E       AssertionError: None != 'iynia fdqfb ifje'

exercises/practice/affine-cipher/affine_cipher_test.py:35: AssertionError
__________________ AffineCipherTest.test_encode_mindblowingly __________________

self = <affine_cipher_test.AffineCipherTest testMethod=test_encode_mindblowingly>

    def test_encode_mindblowingly(self):
>       self.assertEqual(encode("mindblowingly", 11, 15), "rzcwa gnxzc dgt")
E       AssertionError: None != 'rzcwa gnxzc dgt'

exercises/practice/affine-cipher/affine_cipher_test.py:27: AssertionError
_______________________ AffineCipherTest.test_encode_no ________________________

self = <affine_cipher_test.AffineCipherTest testMethod=test_encode_no>

    def test_encode_no(self):
>       self.assertEqual(encode("no", 15, 18), "fu")
E       AssertionError: None != 'fu'

exercises/practice/affine-cipher/affine_cipher_test.py:18: AssertionError
_____________________ AffineCipherTest.test_encode_numbers _____________________

self = <affine_cipher_test.AffineCipherTest testMethod=test_encode_numbers>

    def test_encode_numbers(self):
>       self.assertEqual(
            encode("Testing,1 2 3, testing.", 3, 4), "jqgjc rw123 jqgjc rw"
        )
E       AssertionError: None != 'jqgjc rw123 jqgjc rw'

exercises/practice/affine-cipher/affine_cipher_test.py:30: AssertionError
______________________ AffineCipherTest.test_encode_o_m_g ______________________

self = <affine_cipher_test.AffineCipherTest testMethod=test_encode_o_m_g>

    def test_encode_o_m_g(self):
>       self.assertEqual(encode("O M G", 25, 47), "hjp")
E       AssertionError: None != 'hjp'

exercises/practice/affine-cipher/affine_cipher_test.py:24: AssertionError
_______________________ AffineCipherTest.test_encode_omg _______________________

self = <affine_cipher_test.AffineCipherTest testMethod=test_encode_omg>

    def test_encode_omg(self):
>       self.assertEqual(encode("OMG", 21, 3), "lvz")
E       AssertionError: None != 'lvz'

exercises/practice/affine-cipher/affine_cipher_test.py:21: AssertionError
_____________ AffineCipherTest.test_encode_with_a_not_coprime_to_m _____________

self = <affine_cipher_test.AffineCipherTest testMethod=test_encode_with_a_not_coprime_to_m>

    def test_encode_with_a_not_coprime_to_m(self):
>       with self.assertRaises(ValueError) as err:
E       AssertionError: ValueError not raised

exercises/practice/affine-cipher/affine_cipher_test.py:44: AssertionError
_______________________ AffineCipherTest.test_encode_yes _______________________

self = <affine_cipher_test.AffineCipherTest testMethod=test_encode_yes>

    def test_encode_yes(self):
>       self.assertEqual(encode("yes", 5, 7), "xbt")
E       AssertionError: None != 'xbt'

exercises/practice/affine-cipher/affine_cipher_test.py:15: AssertionError
=========================== short test summary info ============================
FAILED exercises/practice/affine-cipher/affine_cipher_test.py::AffineCipherTest::test_decode_a_sentence
FAILED exercises/practice/affine-cipher/affine_cipher_test.py::AffineCipherTest::test_decode_all_the_letters
FAILED exercises/practice/affine-cipher/affine_cipher_test.py::AffineCipherTest::test_decode_exercism
FAILED exercises/practice/affine-cipher/affine_cipher_test.py::AffineCipherTest::test_decode_numbers
FAILED exercises/practice/affine-cipher/affine_cipher_test.py::AffineCipherTest::test_decode_with_a_not_coprime_to_m
FAILED exercises/practice/affine-cipher/affine_cipher_test.py::AffineCipherTest::test_decode_with_no_spaces_in_input
FAILED exercises/practice/affine-cipher/affine_cipher_test.py::AffineCipherTest::test_decode_with_too_many_spaces
FAILED exercises/practice/affine-cipher/affine_cipher_test.py::AffineCipherTest::test_encode_all_the_letters
FAILED exercises/practice/affine-cipher/affine_cipher_test.py::AffineCipherTest::test_encode_deep_thought
FAILED exercises/practice/affine-cipher/affine_cipher_test.py::AffineCipherTest::test_encode_mindblowingly
FAILED exercises/practice/affine-cipher/affine_cipher_test.py::AffineCipherTest::test_encode_no
FAILED exercises/practice/affine-cipher/affine_cipher_test.py::AffineCipherTest::test_encode_numbers
FAILED exercises/practice/affine-cipher/affine_cipher_test.py::AffineCipherTest::test_encode_o_m_g
FAILED exercises/practice/affine-cipher/affine_cipher_test.py::AffineCipherTest::test_encode_omg
FAILED exercises/practice/affine-cipher/affine_cipher_test.py::AffineCipherTest::test_encode_with_a_not_coprime_to_m
FAILED exercises/practice/affine-cipher/affine_cipher_test.py::AffineCipherTest::test_encode_yes
============================== 16 failed in 0.06s ==============================
