============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.2.0
rootdir: /home/jake/Development/exercism-python
configfile: pytest.ini
plugins: mock-3.11.1, reportlog-0.4.0, repeat-0.9.1
collected 26 items

exercises/practice/variable-length-quantity/variable_length_quantity_test.py F [  3%]
FFFF.FFFFFFF.F..FFFF..FFF                                                [100%]

=================================== FAILURES ===================================
____________ VariableLengthQuantityTest.test_arbitrary_double_byte _____________

self = <variable_length_quantity_test.VariableLengthQuantityTest testMethod=test_arbitrary_double_byte>

    def test_arbitrary_double_byte(self):
>       self.assertEqual(encode([0x2000]), [0xC0, 0x0])
E       AssertionError: b'\x00\xc0' != [192, 0]

exercises/practice/variable-length-quantity/variable_length_quantity_test.py:27: AssertionError
___________ VariableLengthQuantityTest.test_arbitrary_quadruple_byte ___________

self = <variable_length_quantity_test.VariableLengthQuantityTest testMethod=test_arbitrary_quadruple_byte>

    def test_arbitrary_quadruple_byte(self):
>       self.assertEqual(encode([0x8000000]), [0xC0, 0x80, 0x80, 0x0])
E       AssertionError: b'\x00\x80\x80\xc0' != [192, 128, 128, 0]

exercises/practice/variable-length-quantity/variable_length_quantity_test.py:45: AssertionError
___________ VariableLengthQuantityTest.test_arbitrary_quintuple_byte ___________

self = <variable_length_quantity_test.VariableLengthQuantityTest testMethod=test_arbitrary_quintuple_byte>

    def test_arbitrary_quintuple_byte(self):
>       self.assertEqual(encode([0xFF000000]), [0x8F, 0xF8, 0x80, 0x80, 0x0])
E       AssertionError: b'\x00\x80\x80\xf8\x8f' != [143, 248, 128, 128, 0]

exercises/practice/variable-length-quantity/variable_length_quantity_test.py:54: AssertionError
____________ VariableLengthQuantityTest.test_arbitrary_single_byte _____________

self = <variable_length_quantity_test.VariableLengthQuantityTest testMethod=test_arbitrary_single_byte>

    def test_arbitrary_single_byte(self):
>       self.assertEqual(encode([0x40]), [0x40])
E       AssertionError: b'@' != [64]

exercises/practice/variable-length-quantity/variable_length_quantity_test.py:18: AssertionError
____________ VariableLengthQuantityTest.test_arbitrary_triple_byte _____________

self = <variable_length_quantity_test.VariableLengthQuantityTest testMethod=test_arbitrary_triple_byte>

    def test_arbitrary_triple_byte(self):
>       self.assertEqual(encode([0x100000]), [0xC0, 0x80, 0x0])
E       AssertionError: b'\x00\x80\xc0' != [192, 128, 0]

exercises/practice/variable-length-quantity/variable_length_quantity_test.py:36: AssertionError
_______ VariableLengthQuantityTest.test_incomplete_sequence_causes_error _______

self = <variable_length_quantity_test.VariableLengthQuantityTest testMethod=test_incomplete_sequence_causes_error>

    def test_incomplete_sequence_causes_error(self):
>       with self.assertRaises(ValueError) as err:
E       AssertionError: ValueError not raised

exercises/practice/variable-length-quantity/variable_length_quantity_test.py:105: AssertionError
_ VariableLengthQuantityTest.test_incomplete_sequence_causes_error_even_if_value_is_zero _

self = <variable_length_quantity_test.VariableLengthQuantityTest testMethod=test_incomplete_sequence_causes_error_even_if_value_is_zero>

    def test_incomplete_sequence_causes_error_even_if_value_is_zero(self):
>       with self.assertRaises(ValueError) as err:
E       AssertionError: ValueError not raised

exercises/practice/variable-length-quantity/variable_length_quantity_test.py:111: AssertionError
_____________ VariableLengthQuantityTest.test_largest_double_byte ______________

self = <variable_length_quantity_test.VariableLengthQuantityTest testMethod=test_largest_double_byte>

    def test_largest_double_byte(self):
>       self.assertEqual(encode([0x3FFF]), [0xFF, 0x7F])
E       AssertionError: b'\x7f\xff' != [255, 127]

exercises/practice/variable-length-quantity/variable_length_quantity_test.py:30: AssertionError
____________ VariableLengthQuantityTest.test_largest_quadruple_byte ____________

self = <variable_length_quantity_test.VariableLengthQuantityTest testMethod=test_largest_quadruple_byte>

    def test_largest_quadruple_byte(self):
>       self.assertEqual(encode([0xFFFFFFF]), [0xFF, 0xFF, 0xFF, 0x7F])
E       AssertionError: b'\x7f\xff\xff\xff' != [255, 255, 255, 127]

exercises/practice/variable-length-quantity/variable_length_quantity_test.py:48: AssertionError
_____________ VariableLengthQuantityTest.test_largest_single_byte ______________

self = <variable_length_quantity_test.VariableLengthQuantityTest testMethod=test_largest_single_byte>

    def test_largest_single_byte(self):
>       self.assertEqual(encode([0x7F]), [0x7F])
E       AssertionError: b'\x7f' != [127]

exercises/practice/variable-length-quantity/variable_length_quantity_test.py:21: AssertionError
_____________ VariableLengthQuantityTest.test_largest_triple_byte ______________

self = <variable_length_quantity_test.VariableLengthQuantityTest testMethod=test_largest_triple_byte>

    def test_largest_triple_byte(self):
>       self.assertEqual(encode([0x1FFFFF]), [0xFF, 0xFF, 0x7F])
E       AssertionError: b'\x7f\xff\xff' != [255, 255, 127]

exercises/practice/variable-length-quantity/variable_length_quantity_test.py:39: AssertionError
____________ VariableLengthQuantityTest.test_many_multi_byte_values ____________

self = <variable_length_quantity_test.VariableLengthQuantityTest testMethod=test_many_multi_byte_values>

    def test_many_multi_byte_values(self):
>       self.assertEqual(
            encode([0x2000, 0x123456, 0xFFFFFFF, 0x0, 0x3FFF, 0x4000]),
            [
                0xC0,
                0x0,
                0xC8,
                0xE8,
                0x56,
                0xFF,
                0xFF,
                0xFF,
                0x7F,
                0x0,
                0xFF,
                0x7F,
                0x81,
                0x80,
                0x0,
            ],
        )
E       AssertionError: b'\x00\xc0V\xe8\xc8\x7f\xff\xff\xff\x00\x7f\xff\x00\x80\x81' != [192, 0, 200, 232, 86, 255, 255, 255, 127, 0, 255, 127, 129, 128, 0]

exercises/practice/variable-length-quantity/variable_length_quantity_test.py:68: AssertionError
_________ VariableLengthQuantityTest.test_maximum_32_bit_integer_input _________

self = <variable_length_quantity_test.VariableLengthQuantityTest testMethod=test_maximum_32_bit_integer_input>

    def test_maximum_32_bit_integer_input(self):
>       self.assertEqual(encode([0xFFFFFFFF]), [0x8F, 0xFF, 0xFF, 0xFF, 0x7F])
E       AssertionError: b'\x7f\xff\xff\xff\x8f' != [143, 255, 255, 255, 127]

exercises/practice/variable-length-quantity/variable_length_quantity_test.py:57: AssertionError
_____________ VariableLengthQuantityTest.test_smallest_double_byte _____________

self = <variable_length_quantity_test.VariableLengthQuantityTest testMethod=test_smallest_double_byte>

    def test_smallest_double_byte(self):
>       self.assertEqual(encode([0x80]), [0x81, 0x0])
E       AssertionError: b'\x00\x81' != [129, 0]

exercises/practice/variable-length-quantity/variable_length_quantity_test.py:24: AssertionError
___________ VariableLengthQuantityTest.test_smallest_quadruple_byte ____________

self = <variable_length_quantity_test.VariableLengthQuantityTest testMethod=test_smallest_quadruple_byte>

    def test_smallest_quadruple_byte(self):
>       self.assertEqual(encode([0x200000]), [0x81, 0x80, 0x80, 0x0])
E       AssertionError: b'\x00\x80\x80\x81' != [129, 128, 128, 0]

exercises/practice/variable-length-quantity/variable_length_quantity_test.py:42: AssertionError
___________ VariableLengthQuantityTest.test_smallest_quintuple_byte ____________

self = <variable_length_quantity_test.VariableLengthQuantityTest testMethod=test_smallest_quintuple_byte>

    def test_smallest_quintuple_byte(self):
>       self.assertEqual(encode([0x10000000]), [0x81, 0x80, 0x80, 0x80, 0x0])
E       AssertionError: b'\x00\x80\x80\x80\x81' != [129, 128, 128, 128, 0]

exercises/practice/variable-length-quantity/variable_length_quantity_test.py:51: AssertionError
_____________ VariableLengthQuantityTest.test_smallest_triple_byte _____________

self = <variable_length_quantity_test.VariableLengthQuantityTest testMethod=test_smallest_triple_byte>

    def test_smallest_triple_byte(self):
>       self.assertEqual(encode([0x4000]), [0x81, 0x80, 0x0])
E       AssertionError: b'\x00\x80\x81' != [129, 128, 0]

exercises/practice/variable-length-quantity/variable_length_quantity_test.py:33: AssertionError
____________ VariableLengthQuantityTest.test_two_multi_byte_values _____________

self = <variable_length_quantity_test.VariableLengthQuantityTest testMethod=test_two_multi_byte_values>

    def test_two_multi_byte_values(self):
>       self.assertEqual(
            encode([0x4000, 0x123456]), [0x81, 0x80, 0x0, 0xC8, 0xE8, 0x56]
        )
E       AssertionError: b'\x00\x80\x81V\xe8\xc8' != [129, 128, 0, 200, 232, 86]

exercises/practice/variable-length-quantity/variable_length_quantity_test.py:63: AssertionError
____________ VariableLengthQuantityTest.test_two_single_byte_values ____________

self = <variable_length_quantity_test.VariableLengthQuantityTest testMethod=test_two_single_byte_values>

    def test_two_single_byte_values(self):
>       self.assertEqual(encode([0x40, 0x7F]), [0x40, 0x7F])
E       AssertionError: b'@\x7f' != [64, 127]

exercises/practice/variable-length-quantity/variable_length_quantity_test.py:60: AssertionError
_____________________ VariableLengthQuantityTest.test_zero _____________________

self = <variable_length_quantity_test.VariableLengthQuantityTest testMethod=test_zero>

    def test_zero(self):
>       self.assertEqual(encode([0x0]), [0x0])
E       AssertionError: b'\x00' != [0]

exercises/practice/variable-length-quantity/variable_length_quantity_test.py:15: AssertionError
=========================== short test summary info ============================
FAILED exercises/practice/variable-length-quantity/variable_length_quantity_test.py::VariableLengthQuantityTest::test_arbitrary_double_byte
FAILED exercises/practice/variable-length-quantity/variable_length_quantity_test.py::VariableLengthQuantityTest::test_arbitrary_quadruple_byte
FAILED exercises/practice/variable-length-quantity/variable_length_quantity_test.py::VariableLengthQuantityTest::test_arbitrary_quintuple_byte
FAILED exercises/practice/variable-length-quantity/variable_length_quantity_test.py::VariableLengthQuantityTest::test_arbitrary_single_byte
FAILED exercises/practice/variable-length-quantity/variable_length_quantity_test.py::VariableLengthQuantityTest::test_arbitrary_triple_byte
FAILED exercises/practice/variable-length-quantity/variable_length_quantity_test.py::VariableLengthQuantityTest::test_incomplete_sequence_causes_error
FAILED exercises/practice/variable-length-quantity/variable_length_quantity_test.py::VariableLengthQuantityTest::test_incomplete_sequence_causes_error_even_if_value_is_zero
FAILED exercises/practice/variable-length-quantity/variable_length_quantity_test.py::VariableLengthQuantityTest::test_largest_double_byte
FAILED exercises/practice/variable-length-quantity/variable_length_quantity_test.py::VariableLengthQuantityTest::test_largest_quadruple_byte
FAILED exercises/practice/variable-length-quantity/variable_length_quantity_test.py::VariableLengthQuantityTest::test_largest_single_byte
FAILED exercises/practice/variable-length-quantity/variable_length_quantity_test.py::VariableLengthQuantityTest::test_largest_triple_byte
FAILED exercises/practice/variable-length-quantity/variable_length_quantity_test.py::VariableLengthQuantityTest::test_many_multi_byte_values
FAILED exercises/practice/variable-length-quantity/variable_length_quantity_test.py::VariableLengthQuantityTest::test_maximum_32_bit_integer_input
FAILED exercises/practice/variable-length-quantity/variable_length_quantity_test.py::VariableLengthQuantityTest::test_smallest_double_byte
FAILED exercises/practice/variable-length-quantity/variable_length_quantity_test.py::VariableLengthQuantityTest::test_smallest_quadruple_byte
FAILED exercises/practice/variable-length-quantity/variable_length_quantity_test.py::VariableLengthQuantityTest::test_smallest_quintuple_byte
FAILED exercises/practice/variable-length-quantity/variable_length_quantity_test.py::VariableLengthQuantityTest::test_smallest_triple_byte
FAILED exercises/practice/variable-length-quantity/variable_length_quantity_test.py::VariableLengthQuantityTest::test_two_multi_byte_values
FAILED exercises/practice/variable-length-quantity/variable_length_quantity_test.py::VariableLengthQuantityTest::test_two_single_byte_values
FAILED exercises/practice/variable-length-quantity/variable_length_quantity_test.py::VariableLengthQuantityTest::test_zero
========================= 20 failed, 6 passed in 0.12s =========================
