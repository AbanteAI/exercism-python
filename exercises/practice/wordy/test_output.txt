============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.3.0
rootdir: /home/jake/Development/mentat/tests/benchmarks/repos/exercism-python
configfile: pytest.ini
plugins: mock-3.11.1, reportlog-0.4.0, asyncio-0.21.1, xdist-3.3.1
asyncio: mode=strict
collected 25 items

exercises/practice/wordy/wordy_test.py .......FF......FFF..FF..F         [100%]

=================================== FAILURES ===================================
________________________ WordyTest.test_missing_number _________________________

self = <wordy_test.WordyTest testMethod=test_missing_number>

    def test_missing_number(self):
        with self.assertRaises(ValueError) as err:
            answer("What is 7 plus multiplied by -2?")
        self.assertEqual(type(err.exception), ValueError)
>       self.assertEqual(err.exception.args[0], "syntax error")
E       AssertionError: "invalid literal for int() with base 10: 'multiplied by'" != 'syntax error'
E       - invalid literal for int() with base 10: 'multiplied by'
E       + syntax error

exercises/practice/wordy/wordy_test.py:118: AssertionError
_______________________ WordyTest.test_missing_operation _______________________

self = <wordy_test.WordyTest testMethod=test_missing_operation>

    def test_missing_operation(self):
        with self.assertRaises(ValueError) as err:
            answer("What is 2 2 minus 3?")
        self.assertEqual(type(err.exception), ValueError)
>       self.assertEqual(err.exception.args[0], "syntax error")
E       AssertionError: 'unknown operation' != 'syntax error'
E       - unknown operation
E       + syntax error

exercises/practice/wordy/wordy_test.py:112: AssertionError
_______________________ WordyTest.test_non_math_question _______________________

self = <wordy_test.WordyTest testMethod=test_non_math_question>

    def test_non_math_question(self):
        with self.assertRaises(ValueError) as err:
            answer("Who is the President of the United States?")
        self.assertEqual(type(err.exception), ValueError)
>       self.assertEqual(err.exception.args[0], "unknown operation")
E       AssertionError: 'syntax error' != 'unknown operation'
E       - syntax error
E       + unknown operation

exercises/practice/wordy/wordy_test.py:68: AssertionError
____________________ WordyTest.test_reject_postfix_notation ____________________

self = <wordy_test.WordyTest testMethod=test_reject_postfix_notation>

    def test_reject_postfix_notation(self):
        with self.assertRaises(ValueError) as err:
            answer("What is 1 2 plus?")
        self.assertEqual(type(err.exception), ValueError)
>       self.assertEqual(err.exception.args[0], "syntax error")
E       AssertionError: 'unknown operation' != 'syntax error'
E       - unknown operation
E       + syntax error

exercises/practice/wordy/wordy_test.py:98: AssertionError
____________________ WordyTest.test_reject_prefix_notation _____________________

self = <wordy_test.WordyTest testMethod=test_reject_prefix_notation>

    def test_reject_prefix_notation(self):
        with self.assertRaises(ValueError) as err:
            answer("What is plus 1 2?")
        self.assertEqual(type(err.exception), ValueError)
>       self.assertEqual(err.exception.args[0], "syntax error")
E       AssertionError: "invalid literal for int() with base 10: 'plus'" != 'syntax error'
E       - invalid literal for int() with base 10: 'plus'
E       + syntax error

exercises/practice/wordy/wordy_test.py:104: AssertionError
__________________ WordyTest.test_reject_two_numbers_in_a_row __________________

self = <wordy_test.WordyTest testMethod=test_reject_two_numbers_in_a_row>

    def test_reject_two_numbers_in_a_row(self):
        with self.assertRaises(ValueError) as err:
            answer("What is 1 plus 2 1?")
        self.assertEqual(type(err.exception), ValueError)
>       self.assertEqual(err.exception.args[0], "syntax error")
E       AssertionError: 'unknown operation' != 'syntax error'
E       - unknown operation
E       + syntax error

exercises/practice/wordy/wordy_test.py:92: AssertionError
________________ WordyTest.test_reject_two_operations_in_a_row _________________

self = <wordy_test.WordyTest testMethod=test_reject_two_operations_in_a_row>

    def test_reject_two_operations_in_a_row(self):
        with self.assertRaises(ValueError) as err:
            answer("What is 1 plus plus 2?")
        self.assertEqual(type(err.exception), ValueError)
>       self.assertEqual(err.exception.args[0], "syntax error")
E       AssertionError: "invalid literal for int() with base 10: 'plus'" != 'syntax error'
E       - invalid literal for int() with base 10: 'plus'
E       + syntax error

exercises/practice/wordy/wordy_test.py:86: AssertionError
_______________________ WordyTest.test_unknown_operation _______________________

self = <wordy_test.WordyTest testMethod=test_unknown_operation>

    def test_unknown_operation(self):
>       with self.assertRaises(ValueError) as err:
E       AssertionError: ValueError not raised

exercises/practice/wordy/wordy_test.py:59: AssertionError
=========================== short test summary info ============================
FAILED exercises/practice/wordy/wordy_test.py::WordyTest::test_missing_number
FAILED exercises/practice/wordy/wordy_test.py::WordyTest::test_missing_operation
FAILED exercises/practice/wordy/wordy_test.py::WordyTest::test_non_math_question
FAILED exercises/practice/wordy/wordy_test.py::WordyTest::test_reject_postfix_notation
FAILED exercises/practice/wordy/wordy_test.py::WordyTest::test_reject_prefix_notation
FAILED exercises/practice/wordy/wordy_test.py::WordyTest::test_reject_two_numbers_in_a_row
FAILED exercises/practice/wordy/wordy_test.py::WordyTest::test_reject_two_operations_in_a_row
FAILED exercises/practice/wordy/wordy_test.py::WordyTest::test_unknown_operation
========================= 8 failed, 17 passed in 0.08s =========================
