============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.2.0
rootdir: /home/jake/Development/exercism-python
configfile: pytest.ini
plugins: mock-3.11.1, reportlog-0.4.0, repeat-0.9.1, asyncio-0.21.1
asyncio: mode=strict
collected 25 items

exercises/practice/paasio/paasio_test.py FFFFFFFFFFFFFFFFFFFFFFFFF       [100%]

=================================== FAILURES ===================================
_________________ PaasioTest.test_meteredfile_context_manager __________________

self = <paasio_test.PaasioTest testMethod=test_meteredfile_context_manager>
super_mock = <SuperMock at 0x7fa300b7b550 with mock object: <NonCallableMagicMock id='140338068436880'>>

    @patch("paasio.super", create=True, new_callable=SuperMock)
    def test_meteredfile_context_manager(self, super_mock):
        wrapped = MockFile(ZEN)
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        mock.__exit__.side_effect = wrapped.__exit__
        super_mock.mock_object = mock
        with MeteredFile() as file:
>           self.assertEqual(1, super_mock.init_called)
E           AssertionError: 1 != 0

exercises/practice/paasio/paasio_test.py:222: AssertionError

During handling of the above exception, another exception occurred:

self = <paasio_test.PaasioTest testMethod=test_meteredfile_context_manager>
super_mock = <SuperMock at 0x7fa300b7b550 with mock object: <NonCallableMagicMock id='140338068436880'>>

    @patch("paasio.super", create=True, new_callable=SuperMock)
    def test_meteredfile_context_manager(self, super_mock):
        wrapped = MockFile(ZEN)
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        mock.__exit__.side_effect = wrapped.__exit__
        super_mock.mock_object = mock
>       with MeteredFile() as file:

exercises/practice/paasio/paasio_test.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <MeteredFile>, exc_type = <class 'AssertionError'>
exc_val = AssertionError('1 != 0')
exc_tb = <traceback object at 0x7fa3009f8e80>

    def __exit__(self, exc_type, exc_val, exc_tb):
>       self.close()
E       ValueError: I/O operation on uninitialized object

exercises/practice/paasio/paasio.py:14: ValueError
_________ PaasioTest.test_meteredfile_context_manager_exception_raise __________

self = <paasio_test.PaasioTest testMethod=test_meteredfile_context_manager_exception_raise>
super_mock = <SuperMock at 0x7fa300a37970 with mock object: <NonCallableMagicMock id='140338067109920'>>

    @patch("paasio.super", create=True, new_callable=SuperMock)
    def test_meteredfile_context_manager_exception_raise(self, super_mock):
        exception = MockException("Should raise")
        wrapped = MockFile(ZEN, exception=exception)
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        mock.__exit__.side_effect = wrapped.__exit__
        super_mock.mock_object = mock
        with self.assertRaisesRegex(MockException, "Should raise") as err:
>           with MeteredFile() as file:

exercises/practice/paasio/paasio_test.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def __exit__(self, exc_type, exc_val, exc_tb):
>       self.close()
E       ValueError: I/O operation on uninitialized object

exercises/practice/paasio/paasio.py:14: ValueError
________ PaasioTest.test_meteredfile_context_manager_exception_suppress ________

self = <paasio_test.PaasioTest testMethod=test_meteredfile_context_manager_exception_suppress>
super_mock = <SuperMock at 0x7fa300a678b0 with mock object: <NonCallableMagicMock id='140338067306000'>>

    @patch("paasio.super", create=True, new_callable=SuperMock)
    def test_meteredfile_context_manager_exception_suppress(self, super_mock):
        exception = MockException("Should suppress")
        wrapped = MockFile(ZEN, exception=exception)
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        mock.__exit__.side_effect = wrapped.__exit__
        super_mock.mock_object = mock
>       with MeteredFile() as file:

exercises/practice/paasio/paasio_test.py:259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <MeteredFile>, exc_type = None, exc_val = None, exc_tb = None

    def __exit__(self, exc_type, exc_val, exc_tb):
>       self.close()
E       ValueError: I/O operation on uninitialized object

exercises/practice/paasio/paasio.py:14: ValueError
____________________ PaasioTest.test_meteredfile_iteration _____________________

self = <paasio_test.PaasioTest testMethod=test_meteredfile_iteration>
super_mock = <SuperMock at 0x7fa300a19660 with mock object: <NonCallableMagicMock id='140338066984864'>>

    @patch("paasio.super", create=True, new_callable=SuperMock)
    def test_meteredfile_iteration(self, super_mock):
        mock = NonCallableMagicMock(wraps=MockFile(ZEN), autospec=True)
        super_mock.mock_object = mock
        actual_reads = b""
        file = MeteredFile()
>       for line in file:
E       TypeError: iter() returned non-iterator of type 'NoneType'

exercises/practice/paasio/paasio_test.py:275: TypeError
__________________ PaasioTest.test_meteredfile_read_multiple ___________________

self = <paasio_test.PaasioTest testMethod=test_meteredfile_read_multiple>
super_mock = <SuperMock at 0x7fa300a28550 with mock object: <NonCallableMagicMock id='140338067058512'>>

    @patch("paasio.super", create=True, new_callable=SuperMock)
    def test_meteredfile_read_multiple(self, super_mock):
        wrapped = MockFile(ZEN)
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        super_mock.mock_object = mock
        actual_read = b""
        with MeteredFile() as file:
            for _ in range(5):
>               actual_read += file.read(30)
E               TypeError: can't concat NoneType to bytes

exercises/practice/paasio/paasio_test.py:321: TypeError

During handling of the above exception, another exception occurred:

self = <paasio_test.PaasioTest testMethod=test_meteredfile_read_multiple>
super_mock = <SuperMock at 0x7fa300a28550 with mock object: <NonCallableMagicMock id='140338067058512'>>

    @patch("paasio.super", create=True, new_callable=SuperMock)
    def test_meteredfile_read_multiple(self, super_mock):
        wrapped = MockFile(ZEN)
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        super_mock.mock_object = mock
        actual_read = b""
>       with MeteredFile() as file:

exercises/practice/paasio/paasio_test.py:319: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <MeteredFile>, exc_type = <class 'TypeError'>
exc_val = TypeError("can't concat NoneType to bytes")
exc_tb = <traceback object at 0x7fa3008efbc0>

    def __exit__(self, exc_type, exc_val, exc_tb):
>       self.close()
E       ValueError: I/O operation on uninitialized object

exercises/practice/paasio/paasio.py:14: ValueError
_______________ PaasioTest.test_meteredfile_read_multiple_chunk ________________

self = <paasio_test.PaasioTest testMethod=test_meteredfile_read_multiple_chunk>
super_mock = <SuperMock at 0x7fa300a65b10 with mock object: <NonCallableMagicMock id='140338067300768'>>

    @patch("paasio.super", create=True, new_callable=SuperMock)
    def test_meteredfile_read_multiple_chunk(self, super_mock):
        wrapped = MockFile(ZEN, chunk=20)
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        super_mock.mock_object = mock
        actual_read = b""
        with MeteredFile() as file:
            for _ in range(5):
>               actual_read += file.read()
E               TypeError: can't concat NoneType to bytes

exercises/practice/paasio/paasio_test.py:335: TypeError

During handling of the above exception, another exception occurred:

self = <paasio_test.PaasioTest testMethod=test_meteredfile_read_multiple_chunk>
super_mock = <SuperMock at 0x7fa300a65b10 with mock object: <NonCallableMagicMock id='140338067300768'>>

    @patch("paasio.super", create=True, new_callable=SuperMock)
    def test_meteredfile_read_multiple_chunk(self, super_mock):
        wrapped = MockFile(ZEN, chunk=20)
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        super_mock.mock_object = mock
        actual_read = b""
>       with MeteredFile() as file:

exercises/practice/paasio/paasio_test.py:333: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <MeteredFile>, exc_type = <class 'TypeError'>
exc_val = TypeError("can't concat NoneType to bytes")
exc_tb = <traceback object at 0x7fa3008f6f80>

    def __exit__(self, exc_type, exc_val, exc_tb):
>       self.close()
E       ValueError: I/O operation on uninitialized object

exercises/practice/paasio/paasio.py:14: ValueError
____________________ PaasioTest.test_meteredfile_read_once _____________________

self = <paasio_test.PaasioTest testMethod=test_meteredfile_read_once>
super_mock = <SuperMock at 0x7fa300a2b8e0 with mock object: <NonCallableMagicMock id='140338067056064'>>

    @patch("paasio.super", create=True, new_callable=SuperMock)
    def test_meteredfile_read_once(self, super_mock):
        mock = NonCallableMagicMock(wraps=MockFile(ZEN), autospec=True)
        super_mock.mock_object = mock
>       with MeteredFile() as file:

exercises/practice/paasio/paasio_test.py:290: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <MeteredFile>, exc_type = None, exc_val = None, exc_tb = None

    def __exit__(self, exc_type, exc_val, exc_tb):
>       self.close()
E       ValueError: I/O operation on uninitialized object

exercises/practice/paasio/paasio.py:14: ValueError
_________________ PaasioTest.test_meteredfile_read_under_size __________________

self = <paasio_test.PaasioTest testMethod=test_meteredfile_read_under_size>
super_mock = <SuperMock at 0x7fa300a67100 with mock object: <NonCallableMagicMock id='140338067305712'>>

    @patch("paasio.super", create=True, new_callable=SuperMock)
    def test_meteredfile_read_under_size(self, super_mock):
        wrapped = MockFile(ZEN, chunk=257)  # largish odd number
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        super_mock.mock_object = mock
>       with MeteredFile() as file:

exercises/practice/paasio/paasio_test.py:359: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <MeteredFile>, exc_type = None, exc_val = None, exc_tb = None

    def __exit__(self, exc_type, exc_val, exc_tb):
>       self.close()
E       ValueError: I/O operation on uninitialized object

exercises/practice/paasio/paasio.py:14: ValueError
_________________ PaasioTest.test_meteredfile_stats_read_only __________________

self = <paasio_test.PaasioTest testMethod=test_meteredfile_stats_read_only>
super_mock = <SuperMock at 0x7fa300a35a20 with mock object: <NonCallableMagicMock id='140338067101568'>>

    @patch("paasio.super", create=True, new_callable=SuperMock)
    def test_meteredfile_stats_read_only(self, super_mock):
        mock = NonCallableMagicMock(wraps=MockFile(ZEN), autospec=True)
        super_mock.mock_object = mock
        with MeteredFile() as file:
>           self.assertEqual(0, file.read_ops)
E           AssertionError: 0 != None

exercises/practice/paasio/paasio_test.py:415: AssertionError

During handling of the above exception, another exception occurred:

self = <paasio_test.PaasioTest testMethod=test_meteredfile_stats_read_only>
super_mock = <SuperMock at 0x7fa300a35a20 with mock object: <NonCallableMagicMock id='140338067101568'>>

    @patch("paasio.super", create=True, new_callable=SuperMock)
    def test_meteredfile_stats_read_only(self, super_mock):
        mock = NonCallableMagicMock(wraps=MockFile(ZEN), autospec=True)
        super_mock.mock_object = mock
>       with MeteredFile() as file:

exercises/practice/paasio/paasio_test.py:414: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <MeteredFile>, exc_type = <class 'AssertionError'>
exc_val = AssertionError('0 != None')
exc_tb = <traceback object at 0x7fa3008ef280>

    def __exit__(self, exc_type, exc_val, exc_tb):
>       self.close()
E       ValueError: I/O operation on uninitialized object

exercises/practice/paasio/paasio.py:14: ValueError
__________________ PaasioTest.test_meteredfile_write_multiple __________________

self = <paasio_test.PaasioTest testMethod=test_meteredfile_write_multiple>
super_mock = <SuperMock at 0x7fa300a663e0 with mock object: <NonCallableMagicMock id='140338067303552'>>

    @patch("paasio.super", create=True, new_callable=SuperMock)
    def test_meteredfile_write_multiple(self, super_mock):
        wrapped = MockFile()
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        super_mock.mock_object = mock
        write_len = 0
        expected = b"Tomorrow's victory is today's practice."
        with MeteredFile() as file:
>           write_len += file.write(b"Tomorro")
E           TypeError: unsupported operand type(s) for +=: 'int' and 'NoneType'

exercises/practice/paasio/paasio_test.py:387: TypeError

During handling of the above exception, another exception occurred:

self = <paasio_test.PaasioTest testMethod=test_meteredfile_write_multiple>
super_mock = <SuperMock at 0x7fa300a663e0 with mock object: <NonCallableMagicMock id='140338067303552'>>

    @patch("paasio.super", create=True, new_callable=SuperMock)
    def test_meteredfile_write_multiple(self, super_mock):
        wrapped = MockFile()
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        super_mock.mock_object = mock
        write_len = 0
        expected = b"Tomorrow's victory is today's practice."
>       with MeteredFile() as file:

exercises/practice/paasio/paasio_test.py:386: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <MeteredFile>, exc_type = <class 'TypeError'>
exc_val = TypeError("unsupported operand type(s) for +=: 'int' and 'NoneType'")
exc_tb = <traceback object at 0x7fa3008c8d00>

    def __exit__(self, exc_type, exc_val, exc_tb):
>       self.close()
E       ValueError: I/O operation on uninitialized object

exercises/practice/paasio/paasio.py:14: ValueError
____________________ PaasioTest.test_meteredfile_write_once ____________________

self = <paasio_test.PaasioTest testMethod=test_meteredfile_write_once>
super_mock = <SuperMock at 0x7fa300a36c50 with mock object: <NonCallableMagicMock id='140338067108432'>>

    @patch("paasio.super", create=True, new_callable=SuperMock)
    def test_meteredfile_write_once(self, super_mock):
        wrapped = MockFile(chunk=257)  # largish odd number
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        super_mock.mock_object = mock
        with MeteredFile() as file:
            write_len = file.write(ZEN)
>           self.assertEqual(ZEN[:257], wrapped.getbuffer())
E           AssertionError: b"Beautiful is better than ugly.\nExplici[221 chars] the" != <memory at 0x7fa3009bc940>

exercises/practice/paasio/paasio_test.py:373: AssertionError

During handling of the above exception, another exception occurred:

self = <paasio_test.PaasioTest testMethod=test_meteredfile_write_once>
super_mock = <SuperMock at 0x7fa300a36c50 with mock object: <NonCallableMagicMock id='140338067108432'>>

    @patch("paasio.super", create=True, new_callable=SuperMock)
    def test_meteredfile_write_once(self, super_mock):
        wrapped = MockFile(chunk=257)  # largish odd number
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        super_mock.mock_object = mock
>       with MeteredFile() as file:

exercises/practice/paasio/paasio_test.py:371: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <MeteredFile>, exc_type = <class 'AssertionError'>
exc_val = AssertionError('b"Beautiful is better than ugly.\\nExplici[221 chars] the" != <memory at 0x7fa3009bc940>')
exc_tb = <traceback object at 0x7fa300a46600>

    def __exit__(self, exc_type, exc_val, exc_tb):
>       self.close()
E       ValueError: I/O operation on uninitialized object

exercises/practice/paasio/paasio.py:14: ValueError
_________________ PaasioTest.test_meteredfile_write_under_size _________________

self = <paasio_test.PaasioTest testMethod=test_meteredfile_write_under_size>
super_mock = <SuperMock at 0x7fa300a57640 with mock object: <NonCallableMagicMock id='140338067241040'>>

    @patch("paasio.super", create=True, new_callable=SuperMock)
    def test_meteredfile_write_under_size(self, super_mock):
        wrapped = MockFile(chunk=257)  # largish odd number
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        super_mock.mock_object = mock
        with MeteredFile() as file:
            write_len = file.write(ZEN[:123])
>           self.assertEqual(ZEN[:123], wrapped.getbuffer())
E           AssertionError: b'Beautiful is better than ugly.\nExplici[83 chars]comp' != <memory at 0x7fa3009bca00>

exercises/practice/paasio/paasio_test.py:404: AssertionError

During handling of the above exception, another exception occurred:

self = <paasio_test.PaasioTest testMethod=test_meteredfile_write_under_size>
super_mock = <SuperMock at 0x7fa300a57640 with mock object: <NonCallableMagicMock id='140338067241040'>>

    @patch("paasio.super", create=True, new_callable=SuperMock)
    def test_meteredfile_write_under_size(self, super_mock):
        wrapped = MockFile(chunk=257)  # largish odd number
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        super_mock.mock_object = mock
>       with MeteredFile() as file:

exercises/practice/paasio/paasio_test.py:402: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <MeteredFile>, exc_type = <class 'AssertionError'>
exc_val = AssertionError("b'Beautiful is better than ugly.\\nExplici[83 chars]comp' != <memory at 0x7fa3009bca00>")
exc_tb = <traceback object at 0x7fa3009d07c0>

    def __exit__(self, exc_type, exc_val, exc_tb):
>       self.close()
E       ValueError: I/O operation on uninitialized object

exercises/practice/paasio/paasio.py:14: ValueError
________________ PaasioTest.test_meteredsocket_bufsize_required ________________

self = <paasio_test.PaasioTest testMethod=test_meteredsocket_bufsize_required>

    def test_meteredsocket_bufsize_required(self):
        mock = NonCallableMagicMock(wraps=MockSock(), autospec=True)
        with self.assertRaisesRegex(TypeError, "argument"):
            with MeteredSocket(mock) as socket:
>               socket.recv()
E               AttributeError: 'NoneType' object has no attribute 'recv'

exercises/practice/paasio/paasio_test.py:145: AttributeError
________________ PaasioTest.test_meteredsocket_context_manager _________________

self = <paasio_test.PaasioTest testMethod=test_meteredsocket_context_manager>

    def test_meteredsocket_context_manager(self):
        wrapped = MockSock()
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        mock.__exit__.side_effect = wrapped.__exit__
        with MeteredSocket(mock) as socket:
            self.assertFalse(mock.__enter__.called)
>           socket.recv(30)
E           AttributeError: 'NoneType' object has no attribute 'recv'

exercises/practice/paasio/paasio_test.py:18: AttributeError
________ PaasioTest.test_meteredsocket_context_manager_exception_raise _________

self = <paasio_test.PaasioTest testMethod=test_meteredsocket_context_manager_exception_raise>

    def test_meteredsocket_context_manager_exception_raise(self):
        exception = MockException("Should raise")
        wrapped = MockSock(exception=exception)
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        mock.__exit__.side_effect = wrapped.__exit__
        with self.assertRaisesRegex(MockException, "Should raise") as err:
            with MeteredSocket(mock) as socket:
                self.assertFalse(mock.__enter__.called)
>               socket.recv(4096)
E               AttributeError: 'NoneType' object has no attribute 'recv'

exercises/practice/paasio/paasio_test.py:35: AttributeError
_______ PaasioTest.test_meteredsocket_context_manager_exception_suppress _______

self = <paasio_test.PaasioTest testMethod=test_meteredsocket_context_manager_exception_suppress>

    def test_meteredsocket_context_manager_exception_suppress(self):
        exception = MockException("Should suppress")
        wrapped = MockSock(exception=exception)
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        mock.__exit__.side_effect = wrapped.__exit__
        with MeteredSocket(mock) as socket:
            self.assertFalse(mock.__enter__.called)
>           socket.recv(4096)
E           AttributeError: 'NoneType' object has no attribute 'recv'

exercises/practice/paasio/paasio_test.py:51: AttributeError
_________________ PaasioTest.test_meteredsocket_flags_support __________________

self = <paasio_test.PaasioTest testMethod=test_meteredsocket_flags_support>

    def test_meteredsocket_flags_support(self):
        mock = NonCallableMagicMock(wraps=MockSock(), autospec=True)
        with MeteredSocket(mock) as socket:
>           self.assertEqual(len(ZEN), socket.send(ZEN, 42))
E           AttributeError: 'NoneType' object has no attribute 'send'

exercises/practice/paasio/paasio_test.py:160: AttributeError
_________________ PaasioTest.test_meteredsocket_recv_multiple __________________

self = <paasio_test.PaasioTest testMethod=test_meteredsocket_recv_multiple>

    def test_meteredsocket_recv_multiple(self):
        wrapped = MockSock()
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        actual_recv = b""
        with MeteredSocket(mock) as socket:
            for _ in range(5):
>               actual_recv += socket.recv(30)
E               AttributeError: 'NoneType' object has no attribute 'recv'

exercises/practice/paasio/paasio_test.py:74: AttributeError
______________ PaasioTest.test_meteredsocket_recv_multiple_chunk _______________

self = <paasio_test.PaasioTest testMethod=test_meteredsocket_recv_multiple_chunk>

    def test_meteredsocket_recv_multiple_chunk(self):
        wrapped = MockSock(chunk=20)
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        actual_recv = b""
        with MeteredSocket(mock) as socket:
            for _ in range(5):
>               actual_recv += socket.recv(4096)
E               AttributeError: 'NoneType' object has no attribute 'recv'

exercises/practice/paasio/paasio_test.py:86: AttributeError
___________________ PaasioTest.test_meteredsocket_recv_once ____________________

self = <paasio_test.PaasioTest testMethod=test_meteredsocket_recv_once>

    def test_meteredsocket_recv_once(self):
        mock = NonCallableMagicMock(wraps=MockSock(), autospec=True)
        with MeteredSocket(mock) as socket:
>           actual_recv = socket.recv(4096)
E           AttributeError: 'NoneType' object has no attribute 'recv'

exercises/practice/paasio/paasio_test.py:62: AttributeError
________________ PaasioTest.test_meteredsocket_recv_under_size _________________

self = <paasio_test.PaasioTest testMethod=test_meteredsocket_recv_under_size>

    def test_meteredsocket_recv_under_size(self):
        wrapped = MockSock(chunk=257)  # largish odd number
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        with MeteredSocket(mock) as socket:
>           actual_recv = socket.recv(4096)
E           AttributeError: 'NoneType' object has no attribute 'recv'

exercises/practice/paasio/paasio_test.py:97: AttributeError
_________________ PaasioTest.test_meteredsocket_send_multiple __________________

self = <paasio_test.PaasioTest testMethod=test_meteredsocket_send_multiple>

    def test_meteredsocket_send_multiple(self):
        wrapped = MockSock()
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        send_len = 0
        expected = b"Tomorrow's victory is today's practice."
        with MeteredSocket(mock) as socket:
>           send_len += socket.send(b"Tomorro")
E           AttributeError: 'NoneType' object has no attribute 'send'

exercises/practice/paasio/paasio_test.py:120: AttributeError
___________________ PaasioTest.test_meteredsocket_send_once ____________________

self = <paasio_test.PaasioTest testMethod=test_meteredsocket_send_once>

    def test_meteredsocket_send_once(self):
        wrapped = MockSock(chunk=257)  # largish odd number
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        with MeteredSocket(mock) as socket:
>           send_len = socket.send(ZEN)
E           AttributeError: 'NoneType' object has no attribute 'send'

exercises/practice/paasio/paasio_test.py:107: AttributeError
________________ PaasioTest.test_meteredsocket_send_under_size _________________

self = <paasio_test.PaasioTest testMethod=test_meteredsocket_send_under_size>

    def test_meteredsocket_send_under_size(self):
        wrapped = MockSock(chunk=257)  # largish odd number
        mock = NonCallableMagicMock(wraps=wrapped, autospec=True)
        with MeteredSocket(mock) as socket:
>           send_len = socket.send(ZEN[:123])
E           AttributeError: 'NoneType' object has no attribute 'send'

exercises/practice/paasio/paasio_test.py:134: AttributeError
________________ PaasioTest.test_meteredsocket_stats_read_only _________________

self = <paasio_test.PaasioTest testMethod=test_meteredsocket_stats_read_only>

    def test_meteredsocket_stats_read_only(self):
        mock = NonCallableMagicMock(wraps=MockSock(), autospec=True)
        with MeteredSocket(mock) as socket:
>           self.assertEqual(0, socket.send_ops)
E           AttributeError: 'NoneType' object has no attribute 'send_ops'

exercises/practice/paasio/paasio_test.py:188: AttributeError
=========================== short test summary info ============================
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredfile_context_manager
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredfile_context_manager_exception_raise
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredfile_context_manager_exception_suppress
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredfile_iteration
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredfile_read_multiple
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredfile_read_multiple_chunk
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredfile_read_once
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredfile_read_under_size
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredfile_stats_read_only
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredfile_write_multiple
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredfile_write_once
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredfile_write_under_size
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredsocket_bufsize_required
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredsocket_context_manager
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredsocket_context_manager_exception_raise
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredsocket_context_manager_exception_suppress
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredsocket_flags_support
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredsocket_recv_multiple
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredsocket_recv_multiple_chunk
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredsocket_recv_once
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredsocket_recv_under_size
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredsocket_send_multiple
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredsocket_send_once
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredsocket_send_under_size
FAILED exercises/practice/paasio/paasio_test.py::PaasioTest::test_meteredsocket_stats_read_only
============================== 25 failed in 0.33s ==============================
