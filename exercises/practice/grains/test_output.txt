============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.2.0
rootdir: /home/jake/Development/exercism-python
configfile: pytest.ini
plugins: mock-3.11.1, reportlog-0.4.0, repeat-0.9.1
collected 11 items

exercises/practice/grains/grains_test.py .......F.FF                     [100%]

=================================== FAILURES ===================================
_____________ GrainsTest.test_negative_square_raises_an_exception ______________

self = <grains_test.GrainsTest testMethod=test_negative_square_raises_an_exception>

    def test_negative_square_raises_an_exception(self):
        with self.assertRaises(ValueError) as err:
            square(-1)
        self.assertEqual(type(err.exception), ValueError)
>       self.assertEqual(err.exception.args[0], "square must be between 1 and 64")
E       AssertionError: 'Square number must be between 1 and 64' != 'square must be between 1 and 64'
E       - Square number must be between 1 and 64
E       ? ^      -------
E       + square must be between 1 and 64
E       ? ^

exercises/practice/grains/grains_test.py:45: AssertionError
_________________ GrainsTest.test_square_0_raises_an_exception _________________

self = <grains_test.GrainsTest testMethod=test_square_0_raises_an_exception>

    def test_square_0_raises_an_exception(self):
        with self.assertRaises(ValueError) as err:
            square(0)
        self.assertEqual(type(err.exception), ValueError)
>       self.assertEqual(err.exception.args[0], "square must be between 1 and 64")
E       AssertionError: 'Square number must be between 1 and 64' != 'square must be between 1 and 64'
E       - Square number must be between 1 and 64
E       ? ^      -------
E       + square must be between 1 and 64
E       ? ^

exercises/practice/grains/grains_test.py:39: AssertionError
__________ GrainsTest.test_square_greater_than_64_raises_an_exception __________

self = <grains_test.GrainsTest testMethod=test_square_greater_than_64_raises_an_exception>

    def test_square_greater_than_64_raises_an_exception(self):
        with self.assertRaises(ValueError) as err:
            square(65)
        self.assertEqual(type(err.exception), ValueError)
>       self.assertEqual(err.exception.args[0], "square must be between 1 and 64")
E       AssertionError: 'Square number must be between 1 and 64' != 'square must be between 1 and 64'
E       - Square number must be between 1 and 64
E       ? ^      -------
E       + square must be between 1 and 64
E       ? ^

exercises/practice/grains/grains_test.py:51: AssertionError
=========================== short test summary info ============================
FAILED exercises/practice/grains/grains_test.py::GrainsTest::test_negative_square_raises_an_exception
FAILED exercises/practice/grains/grains_test.py::GrainsTest::test_square_0_raises_an_exception
FAILED exercises/practice/grains/grains_test.py::GrainsTest::test_square_greater_than_64_raises_an_exception
========================= 3 failed, 8 passed in 0.04s ==========================
