============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.2.0
rootdir: /home/jake/Development/exercism-python
configfile: pytest.ini
plugins: mock-3.11.1, reportlog-0.4.0, repeat-0.9.1
collected 23 items

exercises/practice/sgf-parsing/sgf_parsing_test.py FFFFFFFFFFFFFFFFFFFFF [ 91%]
FF                                                                       [100%]

=================================== FAILURES ===================================
__________________ SgfParsingTest.test_all_lowercase_property __________________

self = <sgf_parsing_test.SgfParsingTest testMethod=test_all_lowercase_property>

    def test_all_lowercase_property(self):
        input_string = "(;a[b])"
>       with self.assertRaises(ValueError) as err:
E       AssertionError: ValueError not raised

exercises/practice/sgf-parsing/sgf_parsing_test.py:59: AssertionError
_______________________ SgfParsingTest.test_empty_input ________________________

self = <sgf_parsing_test.SgfParsingTest testMethod=test_empty_input>

    def test_empty_input(self):
        input_string = ""
>       with self.assertRaises(ValueError) as err:
E       AssertionError: ValueError not raised

exercises/practice/sgf-parsing/sgf_parsing_test.py:16: AssertionError
_ SgfParsingTest.test_escaped_backslash_in_property_value_becomes_just_a_backslash _

self = <sgf_parsing_test.SgfParsingTest testMethod=test_escaped_backslash_in_property_value_becomes_just_a_backslash>

    def test_escaped_backslash_in_property_value_becomes_just_a_backslash(self):
        input_string = "(;A[\\\\])"
        expected = SgfTree(properties={"A": ["\\"]})
>       self.assertEqual(parse(input_string), expected)
E       AssertionError: None != <sgf_parsing.SgfTree object at 0x7fa2a27fff40>

exercises/practice/sgf-parsing/sgf_parsing_test.py:111: AssertionError
_ SgfParsingTest.test_escaped_closing_bracket_within_property_value_becomes_just_a_closing_bracket _

self = <sgf_parsing_test.SgfParsingTest testMethod=test_escaped_closing_bracket_within_property_value_becomes_just_a_closing_bracket>

    def test_escaped_closing_bracket_within_property_value_becomes_just_a_closing_bracket(
        self,
    ):
        input_string = "(;A[\\]])"
        expected = SgfTree(properties={"A": ["]"]})
>       self.assertEqual(parse(input_string), expected)
E       AssertionError: None != <sgf_parsing.SgfTree object at 0x7fa2a260c2e0>

exercises/practice/sgf-parsing/sgf_parsing_test.py:106: AssertionError
_ SgfParsingTest.test_escaped_newline_in_property_value_is_converted_to_nothing_at_all _

self = <sgf_parsing_test.SgfParsingTest testMethod=test_escaped_newline_in_property_value_is_converted_to_nothing_at_all>

    def test_escaped_newline_in_property_value_is_converted_to_nothing_at_all(self):
        input_string = "(;A[hello\\\nworld])"
        expected = SgfTree(properties={"A": ["helloworld"]})
>       self.assertEqual(parse(input_string), expected)
E       AssertionError: None != <sgf_parsing.SgfTree object at 0x7fa2a27f5f90>

exercises/practice/sgf-parsing/sgf_parsing_test.py:145: AssertionError
_ SgfParsingTest.test_escaped_t_and_n_in_property_value_are_just_letters_not_whitespace _

self = <sgf_parsing_test.SgfParsingTest testMethod=test_escaped_t_and_n_in_property_value_are_just_letters_not_whitespace>

    def test_escaped_t_and_n_in_property_value_are_just_letters_not_whitespace(self):
        input_string = "(;A[\\t = t and \\n = n])"
        expected = SgfTree(properties={"A": ["t = t and n = n"]})
>       self.assertEqual(parse(input_string), expected)
E       AssertionError: None != <sgf_parsing.SgfTree object at 0x7fa2a260e7d0>

exercises/practice/sgf-parsing/sgf_parsing_test.py:150: AssertionError
___ SgfParsingTest.test_escaped_tab_in_property_value_is_converted_to_space ____

self = <sgf_parsing_test.SgfParsingTest testMethod=test_escaped_tab_in_property_value_is_converted_to_space>

    def test_escaped_tab_in_property_value_is_converted_to_space(self):
        input_string = "(;A[hello\\\tworld])"
        expected = SgfTree(properties={"A": ["hello world"]})
>       self.assertEqual(parse(input_string), expected)
E       AssertionError: None != <sgf_parsing.SgfTree object at 0x7fa2a2784850>

exercises/practice/sgf-parsing/sgf_parsing_test.py:140: AssertionError
_ SgfParsingTest.test_mixing_various_kinds_of_whitespace_and_escaped_characters_in_property_value _

self = <sgf_parsing_test.SgfParsingTest testMethod=test_mixing_various_kinds_of_whitespace_and_escaped_characters_in_property_value>

    def test_mixing_various_kinds_of_whitespace_and_escaped_characters_in_property_value(
        self,
    ):
        input_string = "(;A[\\]b\nc\\\nd\t\te\\\\ \\\n\\]])"
        expected = SgfTree(properties={"A": ["]b\ncd  e\\ ]"]})
>       self.assertEqual(parse(input_string), expected)
E       AssertionError: None != <sgf_parsing.SgfTree object at 0x7fa2a260f490>

exercises/practice/sgf-parsing/sgf_parsing_test.py:157: AssertionError
___________________ SgfParsingTest.test_multiple_properties ____________________

self = <sgf_parsing_test.SgfParsingTest testMethod=test_multiple_properties>

    def test_multiple_properties(self):
        input_string = "(;A[b]C[d])"
        expected = SgfTree(properties={"A": ["b"], "C": ["d"]})
>       self.assertEqual(parse(input_string), expected)
E       AssertionError: None != <sgf_parsing.SgfTree object at 0x7fa2a27f7640>

exercises/practice/sgf-parsing/sgf_parsing_test.py:48: AssertionError
_________________ SgfParsingTest.test_multiple_property_values _________________

self = <sgf_parsing_test.SgfParsingTest testMethod=test_multiple_property_values>

    def test_multiple_property_values(self):
        input_string = "(;A[b][c][d])"
        expected = SgfTree(properties={"A": ["b", "c", "d"]})
>       self.assertEqual(parse(input_string), expected)
E       AssertionError: None != <sgf_parsing.SgfTree object at 0x7fa2a260cbe0>

exercises/practice/sgf-parsing/sgf_parsing_test.py:87: AssertionError
_________________ SgfParsingTest.test_node_without_properties __________________

self = <sgf_parsing_test.SgfParsingTest testMethod=test_node_without_properties>

    def test_node_without_properties(self):
        input_string = "(;)"
        expected = SgfTree()
>       self.assertEqual(parse(input_string), expected)
E       AssertionError: None != <sgf_parsing.SgfTree object at 0x7fa2a27f44c0>

exercises/practice/sgf-parsing/sgf_parsing_test.py:38: AssertionError
____________________ SgfParsingTest.test_node_without_tree _____________________

self = <sgf_parsing_test.SgfParsingTest testMethod=test_node_without_tree>

    def test_node_without_tree(self):
        input_string = ";"
>       with self.assertRaises(ValueError) as err:
E       AssertionError: ValueError not raised

exercises/practice/sgf-parsing/sgf_parsing_test.py:30: AssertionError
_ SgfParsingTest.test_opening_bracket_within_property_value_doesn_t_need_to_be_escaped _

self = <sgf_parsing_test.SgfParsingTest testMethod=test_opening_bracket_within_property_value_doesn_t_need_to_be_escaped>

    def test_opening_bracket_within_property_value_doesn_t_need_to_be_escaped(self):
        input_string = "(;A[x[y\\]z][foo]B[bar];C[baz])"
        expected = SgfTree(
            properties={"A": ["x[y]z", "foo"], "B": ["bar"]},
            children=[SgfTree({"C": ["baz"]})],
        )
>       self.assertEqual(parse(input_string), expected)
E       AssertionError: None != <sgf_parsing.SgfTree object at 0x7fa2a27f4670>

exercises/practice/sgf-parsing/sgf_parsing_test.py:119: AssertionError
__ SgfParsingTest.test_parentheses_in_property_value_don_t_need_to_be_escaped __

self = <sgf_parsing_test.SgfParsingTest testMethod=test_parentheses_in_property_value_don_t_need_to_be_escaped>

    def test_parentheses_in_property_value_don_t_need_to_be_escaped(self):
        input_string = "(;A[x(y)z][foo]B[bar];C[baz])"
        expected = SgfTree(
            properties={"A": ["x(y)z", "foo"], "B": ["bar"]},
            children=[SgfTree({"C": ["baz"]})],
        )
>       self.assertEqual(parse(input_string), expected)
E       AssertionError: None != <sgf_parsing.SgfTree object at 0x7fa2a260c760>

exercises/practice/sgf-parsing/sgf_parsing_test.py:135: AssertionError
_______________ SgfParsingTest.test_properties_without_delimiter _______________

self = <sgf_parsing_test.SgfParsingTest testMethod=test_properties_without_delimiter>

    def test_properties_without_delimiter(self):
        input_string = "(;A)"
>       with self.assertRaises(ValueError) as err:
E       AssertionError: ValueError not raised

exercises/practice/sgf-parsing/sgf_parsing_test.py:52: AssertionError
__ SgfParsingTest.test_semicolon_in_property_value_doesn_t_need_to_be_escaped __

self = <sgf_parsing_test.SgfParsingTest testMethod=test_semicolon_in_property_value_doesn_t_need_to_be_escaped>

    def test_semicolon_in_property_value_doesn_t_need_to_be_escaped(self):
        input_string = "(;A[a;b][foo]B[bar];C[baz])"
        expected = SgfTree(
            properties={"A": ["a;b", "foo"], "B": ["bar"]},
            children=[SgfTree({"C": ["baz"]})],
        )
>       self.assertEqual(parse(input_string), expected)
E       AssertionError: None != <sgf_parsing.SgfTree object at 0x7fa2a26396f0>

exercises/practice/sgf-parsing/sgf_parsing_test.py:127: AssertionError
_____________________ SgfParsingTest.test_single_node_tree _____________________

self = <sgf_parsing_test.SgfParsingTest testMethod=test_single_node_tree>

    def test_single_node_tree(self):
        input_string = "(;A[B])"
        expected = SgfTree(properties={"A": ["B"]})
>       self.assertEqual(parse(input_string), expected)
E       AssertionError: None != <sgf_parsing.SgfTree object at 0x7fa2a27fd540>

exercises/practice/sgf-parsing/sgf_parsing_test.py:43: AssertionError
____________________ SgfParsingTest.test_tree_with_no_nodes ____________________

self = <sgf_parsing_test.SgfParsingTest testMethod=test_tree_with_no_nodes>

    def test_tree_with_no_nodes(self):
        input_string = "()"
>       with self.assertRaises(ValueError) as err:
E       AssertionError: ValueError not raised

exercises/practice/sgf-parsing/sgf_parsing_test.py:23: AssertionError
_____________________ SgfParsingTest.test_two_child_trees ______________________

self = <sgf_parsing_test.SgfParsingTest testMethod=test_two_child_trees>

    def test_two_child_trees(self):
        input_string = "(;A[B](;B[C])(;C[D]))"
        expected = SgfTree(
            properties={"A": ["B"]},
            children=[SgfTree({"B": ["C"]}), SgfTree({"C": ["D"]})],
        )
>       self.assertEqual(parse(input_string), expected)
E       AssertionError: None != <sgf_parsing.SgfTree object at 0x7fa2a27f5ae0>

exercises/practice/sgf-parsing/sgf_parsing_test.py:82: AssertionError
________________________ SgfParsingTest.test_two_nodes _________________________

self = <sgf_parsing_test.SgfParsingTest testMethod=test_two_nodes>

    def test_two_nodes(self):
        input_string = "(;A[B];B[C])"
        expected = SgfTree(properties={"A": ["B"]}, children=[SgfTree({"B": ["C"]})])
>       self.assertEqual(parse(input_string), expected)
E       AssertionError: None != <sgf_parsing.SgfTree object at 0x7fa2a263ba90>

exercises/practice/sgf-parsing/sgf_parsing_test.py:74: AssertionError
_______________ SgfParsingTest.test_upper_and_lowercase_property _______________

self = <sgf_parsing_test.SgfParsingTest testMethod=test_upper_and_lowercase_property>

    def test_upper_and_lowercase_property(self):
        input_string = "(;Aa[b])"
>       with self.assertRaises(ValueError) as err:
E       AssertionError: ValueError not raised

exercises/practice/sgf-parsing/sgf_parsing_test.py:66: AssertionError
____ SgfParsingTest.test_within_property_values_newlines_remain_as_newlines ____

self = <sgf_parsing_test.SgfParsingTest testMethod=test_within_property_values_newlines_remain_as_newlines>

    def test_within_property_values_newlines_remain_as_newlines(self):
        input_string = "(;A[hello\n\nworld])"
        expected = SgfTree(properties={"A": ["hello\n\nworld"]})
>       self.assertEqual(parse(input_string), expected)
E       AssertionError: None != <sgf_parsing.SgfTree object at 0x7fa2a263abf0>

exercises/practice/sgf-parsing/sgf_parsing_test.py:99: AssertionError
_ SgfParsingTest.test_within_property_values_whitespace_characters_such_as_tab_are_converted_to_spaces _

self = <sgf_parsing_test.SgfParsingTest testMethod=test_within_property_values_whitespace_characters_such_as_tab_are_converted_to_spaces>

    def test_within_property_values_whitespace_characters_such_as_tab_are_converted_to_spaces(
        self,
    ):
        input_string = "(;A[hello\t\tworld])"
        expected = SgfTree(properties={"A": ["hello  world"]})
>       self.assertEqual(parse(input_string), expected)
E       AssertionError: None != <sgf_parsing.SgfTree object at 0x7fa2a2784880>

exercises/practice/sgf-parsing/sgf_parsing_test.py:94: AssertionError
=========================== short test summary info ============================
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_all_lowercase_property
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_empty_input
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_escaped_backslash_in_property_value_becomes_just_a_backslash
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_escaped_closing_bracket_within_property_value_becomes_just_a_closing_bracket
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_escaped_newline_in_property_value_is_converted_to_nothing_at_all
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_escaped_t_and_n_in_property_value_are_just_letters_not_whitespace
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_escaped_tab_in_property_value_is_converted_to_space
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_mixing_various_kinds_of_whitespace_and_escaped_characters_in_property_value
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_multiple_properties
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_multiple_property_values
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_node_without_properties
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_node_without_tree
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_opening_bracket_within_property_value_doesn_t_need_to_be_escaped
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_parentheses_in_property_value_don_t_need_to_be_escaped
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_properties_without_delimiter
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_semicolon_in_property_value_doesn_t_need_to_be_escaped
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_single_node_tree
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_tree_with_no_nodes
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_two_child_trees
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_two_nodes
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_upper_and_lowercase_property
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_within_property_values_newlines_remain_as_newlines
FAILED exercises/practice/sgf-parsing/sgf_parsing_test.py::SgfParsingTest::test_within_property_values_whitespace_characters_such_as_tab_are_converted_to_spaces
============================== 23 failed in 0.13s ==============================
