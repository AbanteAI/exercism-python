============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.2.0
rootdir: /home/jake/Development/exercism-python
configfile: pytest.ini
plugins: mock-3.11.1, reportlog-0.4.0, repeat-0.9.1
collected 17 items

exercises/practice/scale-generator/scale_generator_test.py ....FFF...F.F [ 76%]
....                                                                     [100%]

=================================== FAILURES ===================================
____________________ ScaleGeneratorTest.test_harmonic_minor ____________________

self = <scale_generator_test.ScaleGeneratorTest testMethod=test_harmonic_minor>

    def test_harmonic_minor(self):
        expected = ["D", "E", "F", "G", "A", "Bb", "Db", "D"]
>       self.assertEqual(Scale("d").interval("MmMMmAm"), expected)
E       AssertionError: Lists differ: ['D', 'E', 'F', 'G', 'A', 'A#', 'C#', 'D'] != ['D', 'E', 'F', 'G', 'A', 'Bb', 'Db', 'D']
E       
E       First differing element 5:
E       'A#'
E       'Bb'
E       
E       - ['D', 'E', 'F', 'G', 'A', 'A#', 'C#', 'D']
E       ?                            ^^    ^^
E       
E       + ['D', 'E', 'F', 'G', 'A', 'Bb', 'Db', 'D']
E       ?                            ^^    ^^

exercises/practice/scale-generator/scale_generator_test.py:66: AssertionError
______________________ ScaleGeneratorTest.test_hexatonic _______________________

self = <scale_generator_test.ScaleGeneratorTest testMethod=test_hexatonic>

    def test_hexatonic(self):
        expected = ["Db", "Eb", "F", "G", "A", "B", "Db"]
>       self.assertEqual(Scale("Db").interval("MMMMMM"), expected)

exercises/practice/scale-generator/scale_generator_test.py:74: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/scale-generator/scale_generator.py:6: in __init__
    self.scale = self.generate_scale()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <scale_generator.Scale object at 0x7fb13061baf0>

    def generate_scale(self):
        chromatic = self.generate_chromatic()
>       start_index = chromatic.index(self.tonic.upper())
E       ValueError: 'DB' is not in list

exercises/practice/scale-generator/scale_generator.py:21: ValueError
_____________________ ScaleGeneratorTest.test_locrian_mode _____________________

self = <scale_generator_test.ScaleGeneratorTest testMethod=test_locrian_mode>

    def test_locrian_mode(self):
        expected = ["G", "Ab", "Bb", "C", "Db", "Eb", "F", "G"]
>       self.assertEqual(Scale("g").interval("mMMmMMM"), expected)
E       AssertionError: Lists differ: ['G', 'G#', 'A#', 'C', 'C#', 'D#', 'F', 'G'] != ['G', 'Ab', 'Bb', 'C', 'Db', 'Eb', 'F', 'G']
E       
E       First differing element 1:
E       'G#'
E       'Ab'
E       
E       - ['G', 'G#', 'A#', 'C', 'C#', 'D#', 'F', 'G']
E       ?        ^^    ^^         ^^    ^^
E       
E       + ['G', 'Ab', 'Bb', 'C', 'Db', 'Eb', 'F', 'G']
E       ?        ^^    ^^         ^^    ^^

exercises/practice/scale-generator/scale_generator_test.py:62: AssertionError
________________ ScaleGeneratorTest.test_minor_scale_with_flats ________________

self = <scale_generator_test.ScaleGeneratorTest testMethod=test_minor_scale_with_flats>

    def test_minor_scale_with_flats(self):
        expected = ["Bb", "C", "Db", "Eb", "F", "Gb", "Ab", "Bb"]
>       self.assertEqual(Scale("bb").interval("MmMMmMM"), expected)

exercises/practice/scale-generator/scale_generator_test.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/scale-generator/scale_generator.py:6: in __init__
    self.scale = self.generate_scale()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <scale_generator.Scale object at 0x7fb1305dbee0>

    def generate_scale(self):
        chromatic = self.generate_chromatic()
>       start_index = chromatic.index(self.tonic.upper())
E       ValueError: 'BB' is not in list

exercises/practice/scale-generator/scale_generator.py:21: ValueError
___________________ ScaleGeneratorTest.test_mixolydian_mode ____________________

self = <scale_generator_test.ScaleGeneratorTest testMethod=test_mixolydian_mode>

    def test_mixolydian_mode(self):
        expected = ["Eb", "F", "G", "Ab", "Bb", "C", "Db", "Eb"]
>       self.assertEqual(Scale("Eb").interval("MMmMMmM"), expected)

exercises/practice/scale-generator/scale_generator_test.py:50: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/scale-generator/scale_generator.py:6: in __init__
    self.scale = self.generate_scale()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <scale_generator.Scale object at 0x7fb130619270>

    def generate_scale(self):
        chromatic = self.generate_chromatic()
>       start_index = chromatic.index(self.tonic.upper())
E       ValueError: 'EB' is not in list

exercises/practice/scale-generator/scale_generator.py:21: ValueError
=========================== short test summary info ============================
FAILED exercises/practice/scale-generator/scale_generator_test.py::ScaleGeneratorTest::test_harmonic_minor
FAILED exercises/practice/scale-generator/scale_generator_test.py::ScaleGeneratorTest::test_hexatonic
FAILED exercises/practice/scale-generator/scale_generator_test.py::ScaleGeneratorTest::test_locrian_mode
FAILED exercises/practice/scale-generator/scale_generator_test.py::ScaleGeneratorTest::test_minor_scale_with_flats
FAILED exercises/practice/scale-generator/scale_generator_test.py::ScaleGeneratorTest::test_mixolydian_mode
========================= 5 failed, 12 passed in 0.06s =========================
