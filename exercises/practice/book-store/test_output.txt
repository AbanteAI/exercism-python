============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.2.0
rootdir: /home/jake/Development/exercism-python
configfile: pytest.ini
plugins: mock-3.11.1, reportlog-0.4.0, repeat-0.9.1, asyncio-0.21.1
asyncio: mode=strict
collected 20 items

exercises/practice/book-store/book_store_test.py F.FFFFFFFFFFFFFFFFFF    [100%]

=================================== FAILURES ===================================
_ BookStoreTest.test_check_that_groups_of_four_are_created_properly_even_when_there_are_more_groups_of_three_than_groups_of_five _

self = <book_store_test.BookStoreTest testMethod=test_check_that_groups_of_four_are_created_properly_even_when_there_are_more_groups_of_three_than_groups_of_five>

    def test_check_that_groups_of_four_are_created_properly_even_when_there_are_more_groups_of_three_than_groups_of_five(
        self,
    ):
        basket = [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 5, 5]
>       self.assertEqual(total(basket), 14560)

exercises/practice/book-store/book_store_test.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

basket = [1, 1, 1, 1, 1, 1, ...]

    def total(basket):
        book_counts = [0, 0, 0, 0, 0]
        for book in basket:
>           book_counts[book] += 1
E           IndexError: list index out of range

exercises/practice/book-store/book_store.py:4: IndexError
___________________ BookStoreTest.test_five_different_books ____________________

self = <book_store_test.BookStoreTest testMethod=test_five_different_books>

    def test_five_different_books(self):
        basket = [1, 2, 3, 4, 5]
>       self.assertEqual(total(basket), 3000)

exercises/practice/book-store/book_store_test.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

basket = [1, 2, 3, 4, 5]

    def total(basket):
        book_counts = [0, 0, 0, 0, 0]
        for book in basket:
>           book_counts[book] += 1
E           IndexError: list index out of range

exercises/practice/book-store/book_store.py:4: IndexError
___________________ BookStoreTest.test_four_different_books ____________________

self = <book_store_test.BookStoreTest testMethod=test_four_different_books>

    def test_four_different_books(self):
        basket = [1, 2, 3, 4]
>       self.assertEqual(total(basket), 2560)
E       AssertionError: 25.6 != 2560

exercises/practice/book-store/book_store_test.py:35: AssertionError
_ BookStoreTest.test_four_groups_of_four_are_cheaper_than_two_groups_each_of_five_and_three _

self = <book_store_test.BookStoreTest testMethod=test_four_groups_of_four_are_cheaper_than_two_groups_each_of_five_and_three>

    def test_four_groups_of_four_are_cheaper_than_two_groups_each_of_five_and_three(
        self,
    ):
        basket = [1, 1, 2, 2, 3, 3, 4, 5, 1, 1, 2, 2, 3, 3, 4, 5]
>       self.assertEqual(total(basket), 10240)

exercises/practice/book-store/book_store_test.py:73: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

basket = [1, 1, 2, 2, 3, 3, ...]

    def total(basket):
        book_counts = [0, 0, 0, 0, 0]
        for book in basket:
>           book_counts[book] += 1
E           IndexError: list index out of range

exercises/practice/book-store/book_store.py:4: IndexError
_ BookStoreTest.test_group_of_four_plus_group_of_two_is_cheaper_than_two_groups_of_three _

self = <book_store_test.BookStoreTest testMethod=test_group_of_four_plus_group_of_two_is_cheaper_than_two_groups_of_three>

    def test_group_of_four_plus_group_of_two_is_cheaper_than_two_groups_of_three(self):
        basket = [1, 1, 2, 2, 3, 4]
>       self.assertEqual(total(basket), 4080)
E       AssertionError: 40.8 != 4080

exercises/practice/book-store/book_store_test.py:51: AssertionError
_ BookStoreTest.test_one_group_of_one_and_four_is_cheaper_than_one_group_of_two_and_three _

self = <book_store_test.BookStoreTest testMethod=test_one_group_of_one_and_four_is_cheaper_than_one_group_of_two_and_three>

    def test_one_group_of_one_and_four_is_cheaper_than_one_group_of_two_and_three(self):
        basket = [1, 1, 2, 3, 4]
>       self.assertEqual(total(basket), 3360)
E       AssertionError: 33.6 != 3360

exercises/practice/book-store/book_store_test.py:83: AssertionError
_ BookStoreTest.test_one_group_of_one_and_two_plus_three_groups_of_four_is_cheaper_than_one_group_of_each_size _

self = <book_store_test.BookStoreTest testMethod=test_one_group_of_one_and_two_plus_three_groups_of_four_is_cheaper_than_one_group_of_each_size>

    def test_one_group_of_one_and_two_plus_three_groups_of_four_is_cheaper_than_one_group_of_each_size(
        self,
    ):
        basket = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5]
>       self.assertEqual(total(basket), 10000)

exercises/practice/book-store/book_store_test.py:89: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

basket = [1, 2, 2, 3, 3, 3, ...]

    def total(basket):
        book_counts = [0, 0, 0, 0, 0]
        for book in basket:
>           book_counts[book] += 1
E           IndexError: list index out of range

exercises/practice/book-store/book_store.py:4: IndexError
____________________ BookStoreTest.test_only_a_single_book _____________________

self = <book_store_test.BookStoreTest testMethod=test_only_a_single_book>

    def test_only_a_single_book(self):
        basket = [1]
>       self.assertEqual(total(basket), 800)
E       AssertionError: 8 != 800

exercises/practice/book-store/book_store_test.py:15: AssertionError
____________________ BookStoreTest.test_shuffled_book_order ____________________

self = <book_store_test.BookStoreTest testMethod=test_shuffled_book_order>

    def test_shuffled_book_order(self):
        basket = [1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3]
>       self.assertEqual(total(basket), 8120)

exercises/practice/book-store/book_store_test.py:99: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

basket = [1, 2, 3, 4, 5, 1, ...]

    def total(basket):
        book_counts = [0, 0, 0, 0, 0]
        for book in basket:
>           book_counts[book] += 1
E           IndexError: list index out of range

exercises/practice/book-store/book_store.py:4: IndexError
___ BookStoreTest.test_three_copies_of_first_book_and_two_each_of_remaining ____

self = <book_store_test.BookStoreTest testMethod=test_three_copies_of_first_book_and_two_each_of_remaining>

    def test_three_copies_of_first_book_and_two_each_of_remaining(self):
        basket = [1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 1]
>       self.assertEqual(total(basket), 6800)

exercises/practice/book-store/book_store_test.py:63: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

basket = [1, 1, 2, 2, 3, 3, ...]

    def total(basket):
        book_counts = [0, 0, 0, 0, 0]
        for book in basket:
>           book_counts[book] += 1
E           IndexError: list index out of range

exercises/practice/book-store/book_store.py:4: IndexError
___________________ BookStoreTest.test_three_different_books ___________________

self = <book_store_test.BookStoreTest testMethod=test_three_different_books>

    def test_three_different_books(self):
        basket = [1, 2, 3]
>       self.assertEqual(total(basket), 2160)
E       AssertionError: 21.6 != 2160

exercises/practice/book-store/book_store_test.py:31: AssertionError
_ BookStoreTest.test_three_each_of_first_two_books_and_two_each_of_remaining_books _

self = <book_store_test.BookStoreTest testMethod=test_three_each_of_first_two_books_and_two_each_of_remaining_books>

    def test_three_each_of_first_two_books_and_two_each_of_remaining_books(self):
        basket = [1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 1, 2]
>       self.assertEqual(total(basket), 7520)

exercises/practice/book-store/book_store_test.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

basket = [1, 1, 2, 2, 3, 3, ...]

    def total(basket):
        book_counts = [0, 0, 0, 0, 0]
        for book in basket:
>           book_counts[book] += 1
E           IndexError: list index out of range

exercises/practice/book-store/book_store.py:4: IndexError
__________________ BookStoreTest.test_two_copies_of_each_book __________________

self = <book_store_test.BookStoreTest testMethod=test_two_copies_of_each_book>

    def test_two_copies_of_each_book(self):
        basket = [1, 1, 2, 2, 3, 3, 4, 4, 5, 5]
>       self.assertEqual(total(basket), 6000)

exercises/practice/book-store/book_store_test.py:59: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

basket = [1, 1, 2, 2, 3, 3, ...]

    def total(basket):
        book_counts = [0, 0, 0, 0, 0]
        for book in basket:
>           book_counts[book] += 1
E           IndexError: list index out of range

exercises/practice/book-store/book_store.py:4: IndexError
____________________ BookStoreTest.test_two_different_books ____________________

self = <book_store_test.BookStoreTest testMethod=test_two_different_books>

    def test_two_different_books(self):
        basket = [1, 2]
>       self.assertEqual(total(basket), 1520)
E       AssertionError: 15.2 != 1520

exercises/practice/book-store/book_store_test.py:27: AssertionError
__ BookStoreTest.test_two_each_of_first_four_books_and_one_copy_each_of_rest ___

self = <book_store_test.BookStoreTest testMethod=test_two_each_of_first_four_books_and_one_copy_each_of_rest>

    def test_two_each_of_first_four_books_and_one_copy_each_of_rest(self):
        basket = [1, 1, 2, 2, 3, 3, 4, 4, 5]
>       self.assertEqual(total(basket), 5560)

exercises/practice/book-store/book_store_test.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

basket = [1, 1, 2, 2, 3, 3, ...]

    def total(basket):
        book_counts = [0, 0, 0, 0, 0]
        for book in basket:
>           book_counts[book] += 1
E           IndexError: list index out of range

exercises/practice/book-store/book_store.py:4: IndexError
__________ BookStoreTest.test_two_groups_of_four_and_a_group_of_five ___________

self = <book_store_test.BookStoreTest testMethod=test_two_groups_of_four_and_a_group_of_five>

    def test_two_groups_of_four_and_a_group_of_five(self):
        basket = [1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 5, 5]
>       self.assertEqual(total(basket), 8120)

exercises/practice/book-store/book_store_test.py:95: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

basket = [1, 1, 1, 2, 2, 2, ...]

    def total(basket):
        book_counts = [0, 0, 0, 0, 0]
        for book in basket:
>           book_counts[book] += 1
E           IndexError: list index out of range

exercises/practice/book-store/book_store.py:4: IndexError
_ BookStoreTest.test_two_groups_of_four_is_cheaper_than_group_of_five_plus_group_of_three _

self = <book_store_test.BookStoreTest testMethod=test_two_groups_of_four_is_cheaper_than_group_of_five_plus_group_of_three>

    def test_two_groups_of_four_is_cheaper_than_group_of_five_plus_group_of_three(self):
        basket = [1, 1, 2, 2, 3, 3, 4, 5]
>       self.assertEqual(total(basket), 5120)

exercises/practice/book-store/book_store_test.py:43: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

basket = [1, 1, 2, 2, 3, 3, ...]

    def total(basket):
        book_counts = [0, 0, 0, 0, 0]
        for book in basket:
>           book_counts[book] += 1
E           IndexError: list index out of range

exercises/practice/book-store/book_store.py:4: IndexError
_ BookStoreTest.test_two_groups_of_four_is_cheaper_than_groups_of_five_and_three _

self = <book_store_test.BookStoreTest testMethod=test_two_groups_of_four_is_cheaper_than_groups_of_five_and_three>

    def test_two_groups_of_four_is_cheaper_than_groups_of_five_and_three(self):
        basket = [1, 1, 2, 3, 4, 4, 5, 5]
>       self.assertEqual(total(basket), 5120)

exercises/practice/book-store/book_store_test.py:47: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

basket = [1, 1, 2, 3, 4, 4, ...]

    def total(basket):
        book_counts = [0, 0, 0, 0, 0]
        for book in basket:
>           book_counts[book] += 1
E           IndexError: list index out of range

exercises/practice/book-store/book_store.py:4: IndexError
___________________ BookStoreTest.test_two_of_the_same_book ____________________

self = <book_store_test.BookStoreTest testMethod=test_two_of_the_same_book>

    def test_two_of_the_same_book(self):
        basket = [2, 2]
>       self.assertEqual(total(basket), 1600)
E       AssertionError: 16 != 1600

exercises/practice/book-store/book_store_test.py:19: AssertionError
=========================== short test summary info ============================
FAILED exercises/practice/book-store/book_store_test.py::BookStoreTest::test_check_that_groups_of_four_are_created_properly_even_when_there_are_more_groups_of_three_than_groups_of_five
FAILED exercises/practice/book-store/book_store_test.py::BookStoreTest::test_five_different_books
FAILED exercises/practice/book-store/book_store_test.py::BookStoreTest::test_four_different_books
FAILED exercises/practice/book-store/book_store_test.py::BookStoreTest::test_four_groups_of_four_are_cheaper_than_two_groups_each_of_five_and_three
FAILED exercises/practice/book-store/book_store_test.py::BookStoreTest::test_group_of_four_plus_group_of_two_is_cheaper_than_two_groups_of_three
FAILED exercises/practice/book-store/book_store_test.py::BookStoreTest::test_one_group_of_one_and_four_is_cheaper_than_one_group_of_two_and_three
FAILED exercises/practice/book-store/book_store_test.py::BookStoreTest::test_one_group_of_one_and_two_plus_three_groups_of_four_is_cheaper_than_one_group_of_each_size
FAILED exercises/practice/book-store/book_store_test.py::BookStoreTest::test_only_a_single_book
FAILED exercises/practice/book-store/book_store_test.py::BookStoreTest::test_shuffled_book_order
FAILED exercises/practice/book-store/book_store_test.py::BookStoreTest::test_three_copies_of_first_book_and_two_each_of_remaining
FAILED exercises/practice/book-store/book_store_test.py::BookStoreTest::test_three_different_books
FAILED exercises/practice/book-store/book_store_test.py::BookStoreTest::test_three_each_of_first_two_books_and_two_each_of_remaining_books
FAILED exercises/practice/book-store/book_store_test.py::BookStoreTest::test_two_copies_of_each_book
FAILED exercises/practice/book-store/book_store_test.py::BookStoreTest::test_two_different_books
FAILED exercises/practice/book-store/book_store_test.py::BookStoreTest::test_two_each_of_first_four_books_and_one_copy_each_of_rest
FAILED exercises/practice/book-store/book_store_test.py::BookStoreTest::test_two_groups_of_four_and_a_group_of_five
FAILED exercises/practice/book-store/book_store_test.py::BookStoreTest::test_two_groups_of_four_is_cheaper_than_group_of_five_plus_group_of_three
FAILED exercises/practice/book-store/book_store_test.py::BookStoreTest::test_two_groups_of_four_is_cheaper_than_groups_of_five_and_three
FAILED exercises/practice/book-store/book_store_test.py::BookStoreTest::test_two_of_the_same_book
========================= 19 failed, 1 passed in 0.11s =========================
