============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.2.0
rootdir: /home/jake/Development/exercism-python
configfile: pytest.ini
plugins: mock-3.11.1, reportlog-0.4.0, repeat-0.9.1
collected 17 items

exercises/practice/ocr-numbers/ocr_numbers_test.py ...F...F.......F.     [100%]

=================================== FAILURES ===================================
_ OcrNumbersTest.test_numbers_separated_by_empty_lines_are_recognized_lines_are_joined_by_commas _

self = <ocr_numbers_test.OcrNumbersTest testMethod=test_numbers_separated_by_empty_lines_are_recognized_lines_are_joined_by_commas>

    def test_numbers_separated_by_empty_lines_are_recognized_lines_are_joined_by_commas(
        self,
    ):
>       self.assertEqual(
            convert(
                [
                    "    _  _ ",
                    "  | _| _|",
                    "  ||_  _|",
                    "         ",
                    "    _  _ ",
                    "|_||_ |_ ",
                    "  | _||_|",
                    "         ",
                    " _  _  _ ",
                    "  ||_||_|",
                    "  ||_| _|",
                    "         ",
                ]
            ),
            "123,456,789",
        )
E       AssertionError: '1?3,456,789' != '123,456,789'
E       - 1?3,456,789
E       ?  ^
E       + 123,456,789
E       ?  ^

exercises/practice/ocr-numbers/ocr_numbers_test.py:108: AssertionError
_______________________ OcrNumbersTest.test_recognizes_2 _______________________

self = <ocr_numbers_test.OcrNumbersTest testMethod=test_recognizes_2>

    def test_recognizes_2(self):
>       self.assertEqual(convert([" _ ", " _|", "|_ ", "   "]), "2")
E       AssertionError: '?' != '2'
E       - ?
E       + 2

exercises/practice/ocr-numbers/ocr_numbers_test.py:69: AssertionError
___________ OcrNumbersTest.test_recognizes_string_of_decimal_numbers ___________

self = <ocr_numbers_test.OcrNumbersTest testMethod=test_recognizes_string_of_decimal_numbers>

    def test_recognizes_string_of_decimal_numbers(self):
>       self.assertEqual(
            convert(
                [
                    "    _  _     _  _  _  _  _  _ ",
                    "  | _| _||_||_ |_   ||_||_|| |",
                    "  ||_  _|  | _||_|  ||_| _||_|",
                    "                              ",
                ]
            ),
            "1234567890",
        )
E       AssertionError: '1?34567890' != '1234567890'
E       - 1?34567890
E       ?  ^
E       + 1234567890
E       ?  ^

exercises/practice/ocr-numbers/ocr_numbers_test.py:93: AssertionError
=========================== short test summary info ============================
FAILED exercises/practice/ocr-numbers/ocr_numbers_test.py::OcrNumbersTest::test_numbers_separated_by_empty_lines_are_recognized_lines_are_joined_by_commas
FAILED exercises/practice/ocr-numbers/ocr_numbers_test.py::OcrNumbersTest::test_recognizes_2
FAILED exercises/practice/ocr-numbers/ocr_numbers_test.py::OcrNumbersTest::test_recognizes_string_of_decimal_numbers
========================= 3 failed, 14 passed in 0.06s =========================
