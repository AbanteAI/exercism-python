============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.3.0
rootdir: /home/jake/Development/mentat/tests/benchmarks/repos/exercism-python
configfile: pytest.ini
plugins: mock-3.11.1, reportlog-0.4.0, asyncio-0.21.1, xdist-3.3.1
asyncio: mode=strict
collected 7 items

exercises/practice/bottle-song/bottle_song_test.py FFFFFFF               [100%]

=================================== FAILURES ===================================
________________________ BottleSongTest.test_all_verses ________________________

self = <bottle_song_test.BottleSongTest testMethod=test_all_verses>

    def test_all_verses(self):
        expected = [
            "Ten green bottles hanging on the wall,",
            "Ten green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be nine green bottles hanging on the wall.",
            "",
            "Nine green bottles hanging on the wall,",
            "Nine green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be eight green bottles hanging on the wall.",
            "",
            "Eight green bottles hanging on the wall,",
            "Eight green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be seven green bottles hanging on the wall.",
            "",
            "Seven green bottles hanging on the wall,",
            "Seven green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be six green bottles hanging on the wall.",
            "",
            "Six green bottles hanging on the wall,",
            "Six green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be five green bottles hanging on the wall.",
            "",
            "Five green bottles hanging on the wall,",
            "Five green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be four green bottles hanging on the wall.",
            "",
            "Four green bottles hanging on the wall,",
            "Four green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be three green bottles hanging on the wall.",
            "",
            "Three green bottles hanging on the wall,",
            "Three green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be two green bottles hanging on the wall.",
            "",
            "Two green bottles hanging on the wall,",
            "Two green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be one green bottle hanging on the wall.",
            "",
            "One green bottle hanging on the wall,",
            "One green bottle hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be no green bottles hanging on the wall.",
        ]
>       self.assertEqual(recite(start=10, take=10), expected)
E       AssertionError: Lists differ: ["10 green bottles hanging on the wall,\n1[1799 chars].\n"] != ['Ten green bottles hanging on the wall,',[1922 chars]ll."]
E       
E       First differing element 0:
E       "10 green bottles hanging on the wall,\n1[135 chars]l.\n"
E       'Ten green bottles hanging on the wall,'
E       
E       Second list contains 30 additional elements.
E       First extra element 19:
E       ''
E       
E       Diff is 7850 characters long. Set self.maxDiff to None to see it.

exercises/practice/bottle-song/bottle_song_test.py:134: AssertionError
___________________ BottleSongTest.test_first_generic_verse ____________________

self = <bottle_song_test.BottleSongTest testMethod=test_first_generic_verse>

    def test_first_generic_verse(self):
        expected = [
            "Ten green bottles hanging on the wall,",
            "Ten green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be nine green bottles hanging on the wall.",
        ]
>       self.assertEqual(recite(start=10), expected)
E       AssertionError: Lists differ: ["10 green bottles hanging on the wall,\n1[136 chars].\n"] != ['Ten green bottles hanging on the wall,',[145 chars]ll."]
E       
E       First differing element 0:
E       "10 green bottles hanging on the wall,\n1[135 chars]l.\n"
E       'Ten green bottles hanging on the wall,'
E       
E       Second list contains 3 additional elements.
E       First extra element 1:
E       'Ten green bottles hanging on the wall,'
E       
E       Diff is 782 characters long. Set self.maxDiff to None to see it.

exercises/practice/bottle-song/bottle_song_test.py:20: AssertionError
_____________________ BottleSongTest.test_first_two_verses _____________________

self = <bottle_song_test.BottleSongTest testMethod=test_first_two_verses>

    def test_first_two_verses(self):
        expected = [
            "Ten green bottles hanging on the wall,",
            "Ten green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be nine green bottles hanging on the wall.",
            "",
            "Nine green bottles hanging on the wall,",
            "Nine green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be eight green bottles hanging on the wall.",
        ]
>       self.assertEqual(recite(start=10, take=2), expected)
E       AssertionError: Lists differ: ["10 green bottles hanging on the wall,\n1[321 chars].\n"] != ['Ten green bottles hanging on the wall,',[344 chars]ll."]
E       
E       First differing element 0:
E       "10 green bottles hanging on the wall,\n1[135 chars]l.\n"
E       'Ten green bottles hanging on the wall,'
E       
E       Second list contains 6 additional elements.
E       First extra element 3:
E       "There'll be nine green bottles hanging on the wall."
E       
E       Diff is 1573 characters long. Set self.maxDiff to None to see it.

exercises/practice/bottle-song/bottle_song_test.py:61: AssertionError
____________________ BottleSongTest.test_last_generic_verse ____________________

self = <bottle_song_test.BottleSongTest testMethod=test_last_generic_verse>

    def test_last_generic_verse(self):
        expected = [
            "Three green bottles hanging on the wall,",
            "Three green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be two green bottles hanging on the wall.",
        ]
>       self.assertEqual(recite(start=3), expected)
E       AssertionError: Lists differ: ["3 green bottles hanging on the wall,\n3 [134 chars].\n"] != ['Three green bottles hanging on the wall,[148 chars]ll."]
E       
E       First differing element 0:
E       "3 green bottles hanging on the wall,\n3 [133 chars]l.\n"
E       'Three green bottles hanging on the wall,'
E       
E       Second list contains 3 additional elements.
E       First extra element 1:
E       'Three green bottles hanging on the wall,'
E       
E       Diff is 784 characters long. Set self.maxDiff to None to see it.

exercises/practice/bottle-song/bottle_song_test.py:29: AssertionError
____________________ BottleSongTest.test_last_three_verses _____________________

self = <bottle_song_test.BottleSongTest testMethod=test_last_three_verses>

    def test_last_three_verses(self):
        expected = [
            "Three green bottles hanging on the wall,",
            "Three green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be two green bottles hanging on the wall.",
            "",
            "Two green bottles hanging on the wall,",
            "Two green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be one green bottle hanging on the wall.",
            "",
            "One green bottle hanging on the wall,",
            "One green bottle hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be no green bottles hanging on the wall.",
        ]
>       self.assertEqual(recite(start=3, take=3), expected)
E       AssertionError: Lists differ: ["3 green bottles hanging on the wall,\n3 [502 chars].\n"] != ['Three green bottles hanging on the wall,[534 chars]ll."]
E       
E       First differing element 0:
E       "3 green bottles hanging on the wall,\n3 [133 chars]l.\n"
E       'Three green bottles hanging on the wall,'
E       
E       Second list contains 9 additional elements.
E       First extra element 5:
E       'Two green bottles hanging on the wall,'
E       
E       Diff is 2319 characters long. Set self.maxDiff to None to see it.

exercises/practice/bottle-song/bottle_song_test.py:80: AssertionError
___________________ BottleSongTest.test_verse_with_1_bottle ____________________

self = <bottle_song_test.BottleSongTest testMethod=test_verse_with_1_bottle>

    def test_verse_with_1_bottle(self):
        expected = [
            "One green bottle hanging on the wall,",
            "One green bottle hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be no green bottles hanging on the wall.",
        ]
>       self.assertEqual(recite(start=1), expected)
E       AssertionError: Lists differ: ["1 green bottle hanging on the wall,\n1 g[133 chars].\n"] != ['One green bottle hanging on the wall,', [141 chars]ll."]
E       
E       First differing element 0:
E       "1 green bottle hanging on the wall,\n1 g[132 chars]l.\n"
E       'One green bottle hanging on the wall,'
E       
E       Second list contains 3 additional elements.
E       First extra element 1:
E       'One green bottle hanging on the wall,'
E       
E       Diff is 748 characters long. Set self.maxDiff to None to see it.

exercises/practice/bottle-song/bottle_song_test.py:47: AssertionError
___________________ BottleSongTest.test_verse_with_2_bottles ___________________

self = <bottle_song_test.BottleSongTest testMethod=test_verse_with_2_bottles>

    def test_verse_with_2_bottles(self):
        expected = [
            "Two green bottles hanging on the wall,",
            "Two green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be one green bottle hanging on the wall.",
        ]
>       self.assertEqual(recite(start=2), expected)
E       AssertionError: Lists differ: ["2 green bottles hanging on the wall,\n2 [133 chars].\n"] != ['Two green bottles hanging on the wall,',[143 chars]ll."]
E       
E       First differing element 0:
E       "2 green bottles hanging on the wall,\n2 [132 chars]l.\n"
E       'Two green bottles hanging on the wall,'
E       
E       Second list contains 3 additional elements.
E       First extra element 1:
E       'Two green bottles hanging on the wall,'
E       
E       Diff is 773 characters long. Set self.maxDiff to None to see it.

exercises/practice/bottle-song/bottle_song_test.py:38: AssertionError
=========================== short test summary info ============================
FAILED exercises/practice/bottle-song/bottle_song_test.py::BottleSongTest::test_all_verses
FAILED exercises/practice/bottle-song/bottle_song_test.py::BottleSongTest::test_first_generic_verse
FAILED exercises/practice/bottle-song/bottle_song_test.py::BottleSongTest::test_first_two_verses
FAILED exercises/practice/bottle-song/bottle_song_test.py::BottleSongTest::test_last_generic_verse
FAILED exercises/practice/bottle-song/bottle_song_test.py::BottleSongTest::test_last_three_verses
FAILED exercises/practice/bottle-song/bottle_song_test.py::BottleSongTest::test_verse_with_1_bottle
FAILED exercises/practice/bottle-song/bottle_song_test.py::BottleSongTest::test_verse_with_2_bottles
============================== 7 failed in 0.09s ===============================
