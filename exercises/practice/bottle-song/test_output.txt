============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.2.0
rootdir: /home/jake/Development/exercism-python
configfile: pytest.ini
plugins: mock-3.11.1, reportlog-0.4.0, repeat-0.9.1
collected 7 items

exercises/practice/bottle-song/bottle_song_test.py FFFFF.F               [100%]

=================================== FAILURES ===================================
________________________ BottleSongTest.test_all_verses ________________________

self = <bottle_song_test.BottleSongTest testMethod=test_all_verses>

    def test_all_verses(self):
        expected = [
            "Ten green bottles hanging on the wall,",
            "Ten green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be nine green bottles hanging on the wall.",
            "",
            "Nine green bottles hanging on the wall,",
            "Nine green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be eight green bottles hanging on the wall.",
            "",
            "Eight green bottles hanging on the wall,",
            "Eight green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be seven green bottles hanging on the wall.",
            "",
            "Seven green bottles hanging on the wall,",
            "Seven green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be six green bottles hanging on the wall.",
            "",
            "Six green bottles hanging on the wall,",
            "Six green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be five green bottles hanging on the wall.",
            "",
            "Five green bottles hanging on the wall,",
            "Five green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be four green bottles hanging on the wall.",
            "",
            "Four green bottles hanging on the wall,",
            "Four green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be three green bottles hanging on the wall.",
            "",
            "Three green bottles hanging on the wall,",
            "Three green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be two green bottles hanging on the wall.",
            "",
            "Two green bottles hanging on the wall,",
            "Two green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be one green bottle hanging on the wall.",
            "",
            "One green bottle hanging on the wall,",
            "One green bottle hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be no green bottles hanging on the wall.",
        ]
>       self.assertEqual(recite(start=10, take=10), expected)
E       AssertionError: Lists differ: ['Ten[141 chars]l be Nine green bottles hanging on the wall.",[1737 chars]ll."] != ['Ten[141 chars]l be nine green bottles hanging on the wall.",[1772 chars]ll."]
E       
E       First differing element 3:
E       "There'll be Nine green bottles hanging on the wall."
E       "There'll be nine green bottles hanging on the wall."
E       
E       Second list contains 9 additional elements.
E       First extra element 40:
E       'Two green bottles hanging on the wall,'
E       
E       Diff is 2996 characters long. Set self.maxDiff to None to see it.

exercises/practice/bottle-song/bottle_song_test.py:134: AssertionError
___________________ BottleSongTest.test_first_generic_verse ____________________

self = <bottle_song_test.BottleSongTest testMethod=test_first_generic_verse>

    def test_first_generic_verse(self):
        expected = [
            "Ten green bottles hanging on the wall,",
            "Ten green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be nine green bottles hanging on the wall.",
        ]
>       self.assertEqual(recite(start=10), expected)
E       AssertionError: Lists differ: ['Ten[124 chars] fall,', "There'll be Nine green bottles hanging on the wall."] != ['Ten[124 chars] fall,', "There'll be nine green bottles hanging on the wall."]
E       
E       First differing element 3:
E       "There'll be Nine green bottles hanging on the wall."
E       "There'll be nine green bottles hanging on the wall."
E       
E         ['Ten green bottles hanging on the wall,',
E          'Ten green bottles hanging on the wall,',
E          'And if one green bottle should accidentally fall,',
E       -  "There'll be Nine green bottles hanging on the wall."]
E       ?               ^
E       
E       +  "There'll be nine green bottles hanging on the wall."]
E       ?               ^

exercises/practice/bottle-song/bottle_song_test.py:20: AssertionError
_____________________ BottleSongTest.test_first_two_verses _____________________

self = <bottle_song_test.BottleSongTest testMethod=test_first_two_verses>

    def test_first_two_verses(self):
        expected = [
            "Ten green bottles hanging on the wall,",
            "Ten green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be nine green bottles hanging on the wall.",
            "",
            "Nine green bottles hanging on the wall,",
            "Nine green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be eight green bottles hanging on the wall.",
        ]
>       self.assertEqual(recite(start=10, take=2), expected)
E       AssertionError: Lists differ: ['Ten[141 chars]l be Nine green bottles hanging on the wall.",[190 chars]ll."] != ['Ten[141 chars]l be nine green bottles hanging on the wall.",[194 chars]ll."]
E       
E       First differing element 3:
E       "There'll be Nine green bottles hanging on the wall."
E       "There'll be nine green bottles hanging on the wall."
E       
E       Second list contains 1 additional elements.
E       First extra element 8:
E       "There'll be eight green bottles hanging on the wall."
E       
E         ['Ten green bottles hanging on the wall,',
E          'Ten green bottles hanging on the wall,',
E          'And if one green bottle should accidentally fall,',
E       -  "There'll be Nine green bottles hanging on the wall.",
E       ?               ^
E       
E       +  "There'll be nine green bottles hanging on the wall.",
E       ?               ^
E       
E       +  '',
E          'Nine green bottles hanging on the wall,',
E          'Nine green bottles hanging on the wall,',
E          'And if one green bottle should accidentally fall,',
E       -  "There'll be Eight green bottles hanging on the wall."]
E       ?               ^
E       
E       +  "There'll be eight green bottles hanging on the wall."]
E       ?               ^

exercises/practice/bottle-song/bottle_song_test.py:61: AssertionError
____________________ BottleSongTest.test_last_generic_verse ____________________

self = <bottle_song_test.BottleSongTest testMethod=test_last_generic_verse>

    def test_last_generic_verse(self):
        expected = [
            "Three green bottles hanging on the wall,",
            "Three green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be two green bottles hanging on the wall.",
        ]
>       self.assertEqual(recite(start=3), expected)
E       AssertionError: Lists differ: ['Thr[127 chars]y fall,', "There'll be Two green bottles hanging on the wall."] != ['Thr[127 chars]y fall,', "There'll be two green bottles hanging on the wall."]
E       
E       First differing element 3:
E       "There'll be Two green bottles hanging on the wall."
E       "There'll be two green bottles hanging on the wall."
E       
E         ['Three green bottles hanging on the wall,',
E          'Three green bottles hanging on the wall,',
E          'And if one green bottle should accidentally fall,',
E       -  "There'll be Two green bottles hanging on the wall."]
E       ?               ^
E       
E       +  "There'll be two green bottles hanging on the wall."]
E       ?               ^

exercises/practice/bottle-song/bottle_song_test.py:29: AssertionError
____________________ BottleSongTest.test_last_three_verses _____________________

self = <bottle_song_test.BottleSongTest testMethod=test_last_three_verses>

    def test_last_three_verses(self):
        expected = [
            "Three green bottles hanging on the wall,",
            "Three green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be two green bottles hanging on the wall.",
            "",
            "Two green bottles hanging on the wall,",
            "Two green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be one green bottle hanging on the wall.",
            "",
            "One green bottle hanging on the wall,",
            "One green bottle hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be no green bottles hanging on the wall.",
        ]
>       self.assertEqual(recite(start=3, take=3), expected)
E       AssertionError: Lists differ: ['Thr[145 chars]l be Two green bottles hanging on the wall.", [373 chars]ll."] != ['Thr[145 chars]l be two green bottles hanging on the wall.", [380 chars]ll."]
E       
E       First differing element 3:
E       "There'll be Two green bottles hanging on the wall."
E       "There'll be two green bottles hanging on the wall."
E       
E       Second list contains 2 additional elements.
E       First extra element 12:
E       'And if one green bottle should accidentally fall,'
E       
E       Diff is 829 characters long. Set self.maxDiff to None to see it.

exercises/practice/bottle-song/bottle_song_test.py:80: AssertionError
___________________ BottleSongTest.test_verse_with_2_bottles ___________________

self = <bottle_song_test.BottleSongTest testMethod=test_verse_with_2_bottles>

    def test_verse_with_2_bottles(self):
        expected = [
            "Two green bottles hanging on the wall,",
            "Two green bottles hanging on the wall,",
            "And if one green bottle should accidentally fall,",
            "There'll be one green bottle hanging on the wall.",
        ]
>       self.assertEqual(recite(start=2), expected)
E       AssertionError: Lists differ: ['Two[123 chars]y fall,', "There'll be One green bottles hanging on the wall."] != ['Two[123 chars]y fall,', "There'll be one green bottle hanging on the wall."]
E       
E       First differing element 3:
E       "There'll be One green bottles hanging on the wall."
E       "There'll be one green bottle hanging on the wall."
E       
E         ['Two green bottles hanging on the wall,',
E          'Two green bottles hanging on the wall,',
E          'And if one green bottle should accidentally fall,',
E       -  "There'll be One green bottles hanging on the wall."]
E       ?               ^               -
E       
E       +  "There'll be one green bottle hanging on the wall."]
E       ?               ^

exercises/practice/bottle-song/bottle_song_test.py:38: AssertionError
=========================== short test summary info ============================
FAILED exercises/practice/bottle-song/bottle_song_test.py::BottleSongTest::test_all_verses
FAILED exercises/practice/bottle-song/bottle_song_test.py::BottleSongTest::test_first_generic_verse
FAILED exercises/practice/bottle-song/bottle_song_test.py::BottleSongTest::test_first_two_verses
FAILED exercises/practice/bottle-song/bottle_song_test.py::BottleSongTest::test_last_generic_verse
FAILED exercises/practice/bottle-song/bottle_song_test.py::BottleSongTest::test_last_three_verses
FAILED exercises/practice/bottle-song/bottle_song_test.py::BottleSongTest::test_verse_with_2_bottles
========================= 6 failed, 1 passed in 0.05s ==========================
