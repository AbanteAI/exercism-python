============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.3.0
rootdir: /home/jake/Development/mentat/tests/benchmarks/repos/exercism-python
configfile: pytest.ini
plugins: mock-3.11.1, reportlog-0.4.0, asyncio-0.21.1, xdist-3.3.1
asyncio: mode=strict
collected 10 items

exercises/practice/binary-search-tree/binary_search_tree_test.py FFFFF.F [ 70%]
FFF                                                                      [100%]

=================================== FAILURES ===================================
______________ BinarySearchTreeTest.test_can_create_complex_tree _______________

self = <binary_search_tree_test.BinarySearchTreeTest testMethod=test_can_create_complex_tree>

    def test_can_create_complex_tree(self):
        expected = TreeNode(
            "4",
            TreeNode("2", TreeNode("1", None, None), TreeNode("3", None, None)),
            TreeNode("6", TreeNode("5", None, None), TreeNode("7", None, None)),
        )
        self.assertTreeEqual(
>           BinarySearchTree(["4", "2", "6", "1", "3", "5", "7"]).data(), expected
        )

exercises/practice/binary-search-tree/binary_search_tree_test.py:37: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/binary-search-tree/binary_search_tree.py:15: in __init__
    self.insert(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <binary_search_tree.BinarySearchTree object at 0x7fa2d7d8cd60>
data = '2'

    def insert(self, data):
        if self.root is None:
            self.root = TreeNode(data)
        else:
>           self._insert_recursive(self.root, data)
E           AttributeError: 'BinarySearchTree' object has no attribute '_insert_recursive'

exercises/practice/binary-search-tree/binary_search_tree.py:20: AttributeError
_______________ BinarySearchTreeTest.test_can_sort_complex_tree ________________

self = <binary_search_tree_test.BinarySearchTreeTest testMethod=test_can_sort_complex_tree>

    def test_can_sort_complex_tree(self):
        expected = ["1", "2", "3", "5", "6", "7"]
        self.assertEqual(
>           BinarySearchTree(["2", "1", "3", "6", "7", "5"]).sorted_data(), expected
        )

exercises/practice/binary-search-tree/binary_search_tree_test.py:59: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/binary-search-tree/binary_search_tree.py:15: in __init__
    self.insert(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <binary_search_tree.BinarySearchTree object at 0x7fa2d7d6ead0>
data = '1'

    def insert(self, data):
        if self.root is None:
            self.root = TreeNode(data)
        else:
>           self._insert_recursive(self.root, data)
E           AttributeError: 'BinarySearchTree' object has no attribute '_insert_recursive'

exercises/practice/binary-search-tree/binary_search_tree.py:20: AttributeError
__ BinarySearchTreeTest.test_can_sort_if_second_number_is_greater_than_first ___

self = <binary_search_tree_test.BinarySearchTreeTest testMethod=test_can_sort_if_second_number_is_greater_than_first>

    def test_can_sort_if_second_number_is_greater_than_first(self):
        expected = ["2", "3"]
>       self.assertEqual(BinarySearchTree(["2", "3"]).sorted_data(), expected)

exercises/practice/binary-search-tree/binary_search_tree_test.py:54: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/binary-search-tree/binary_search_tree.py:15: in __init__
    self.insert(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <binary_search_tree.BinarySearchTree object at 0x7fa2d7d6f100>
data = '3'

    def insert(self, data):
        if self.root is None:
            self.root = TreeNode(data)
        else:
>           self._insert_recursive(self.root, data)
E           AttributeError: 'BinarySearchTree' object has no attribute '_insert_recursive'

exercises/practice/binary-search-tree/binary_search_tree.py:20: AttributeError
_____ BinarySearchTreeTest.test_can_sort_if_second_number_is_same_as_first _____

self = <binary_search_tree_test.BinarySearchTreeTest testMethod=test_can_sort_if_second_number_is_same_as_first>

    def test_can_sort_if_second_number_is_same_as_first(self):
        expected = ["2", "2"]
>       self.assertEqual(BinarySearchTree(["2", "2"]).sorted_data(), expected)

exercises/practice/binary-search-tree/binary_search_tree_test.py:50: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/binary-search-tree/binary_search_tree.py:15: in __init__
    self.insert(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <binary_search_tree.BinarySearchTree object at 0x7fa2d7d6e3e0>
data = '2'

    def insert(self, data):
        if self.root is None:
            self.root = TreeNode(data)
        else:
>           self._insert_recursive(self.root, data)
E           AttributeError: 'BinarySearchTree' object has no attribute '_insert_recursive'

exercises/practice/binary-search-tree/binary_search_tree.py:20: AttributeError
__ BinarySearchTreeTest.test_can_sort_if_second_number_is_smaller_than_first ___

self = <binary_search_tree_test.BinarySearchTreeTest testMethod=test_can_sort_if_second_number_is_smaller_than_first>

    def test_can_sort_if_second_number_is_smaller_than_first(self):
        expected = ["1", "2"]
>       self.assertEqual(BinarySearchTree(["2", "1"]).sorted_data(), expected)

exercises/practice/binary-search-tree/binary_search_tree_test.py:46: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/binary-search-tree/binary_search_tree.py:15: in __init__
    self.insert(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <binary_search_tree.BinarySearchTree object at 0x7fa2d7e1c640>
data = '1'

    def insert(self, data):
        if self.root is None:
            self.root = TreeNode(data)
        else:
>           self._insert_recursive(self.root, data)
E           AttributeError: 'BinarySearchTree' object has no attribute '_insert_recursive'

exercises/practice/binary-search-tree/binary_search_tree.py:20: AttributeError
__________________ BinarySearchTreeTest.test_data_is_retained __________________

self = <binary_search_tree_test.BinarySearchTreeTest testMethod=test_data_is_retained>

    def test_data_is_retained(self):
        expected = TreeNode("4", None, None)
>       self.assertTreeEqual(BinarySearchTree(["4"]).data(), expected)

exercises/practice/binary-search-tree/binary_search_tree_test.py:16: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/binary-search-tree/binary_search_tree_test.py:65: in assertTreeEqual
    self.compare_tree(tree_one, tree_two)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <binary_search_tree_test.BinarySearchTreeTest testMethod=test_data_is_retained>
tree_one = '4'
tree_two = <binary_search_tree.TreeNode object at 0x7fa2d7d8c9d0>

    def compare_tree(self, tree_one, tree_two):
>       self.assertEqual(tree_one.data, tree_two.data)
E       AttributeError: 'str' object has no attribute 'data'

exercises/practice/binary-search-tree/binary_search_tree_test.py:70: AttributeError
____________ BinarySearchTreeTest.test_greater_number_at_right_node ____________

self = <binary_search_tree_test.BinarySearchTreeTest testMethod=test_greater_number_at_right_node>

    def test_greater_number_at_right_node(self):
        expected = TreeNode("4", None, TreeNode("5", None, None))
>       self.assertTreeEqual(BinarySearchTree(["4", "5"]).data(), expected)

exercises/practice/binary-search-tree/binary_search_tree_test.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/binary-search-tree/binary_search_tree.py:15: in __init__
    self.insert(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <binary_search_tree.BinarySearchTree object at 0x7fa2d7e1d4e0>
data = '5'

    def insert(self, data):
        if self.root is None:
            self.root = TreeNode(data)
        else:
>           self._insert_recursive(self.root, data)
E           AttributeError: 'BinarySearchTree' object has no attribute '_insert_recursive'

exercises/practice/binary-search-tree/binary_search_tree.py:20: AttributeError
______________ BinarySearchTreeTest.test_same_number_at_left_node ______________

self = <binary_search_tree_test.BinarySearchTreeTest testMethod=test_same_number_at_left_node>

    def test_same_number_at_left_node(self):
        expected = TreeNode("4", TreeNode("4", None, None), None)
>       self.assertTreeEqual(BinarySearchTree(["4", "4"]).data(), expected)

exercises/practice/binary-search-tree/binary_search_tree_test.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/binary-search-tree/binary_search_tree.py:15: in __init__
    self.insert(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <binary_search_tree.BinarySearchTree object at 0x7fa2d8593280>
data = '4'

    def insert(self, data):
        if self.root is None:
            self.root = TreeNode(data)
        else:
>           self._insert_recursive(self.root, data)
E           AttributeError: 'BinarySearchTree' object has no attribute '_insert_recursive'

exercises/practice/binary-search-tree/binary_search_tree.py:20: AttributeError
____________ BinarySearchTreeTest.test_smaller_number_at_left_node _____________

self = <binary_search_tree_test.BinarySearchTreeTest testMethod=test_smaller_number_at_left_node>

    def test_smaller_number_at_left_node(self):
        expected = TreeNode("4", TreeNode("2", None, None), None)
>       self.assertTreeEqual(BinarySearchTree(["4", "2"]).data(), expected)

exercises/practice/binary-search-tree/binary_search_tree_test.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
exercises/practice/binary-search-tree/binary_search_tree.py:15: in __init__
    self.insert(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <binary_search_tree.BinarySearchTree object at 0x7fa2d7e1f730>
data = '2'

    def insert(self, data):
        if self.root is None:
            self.root = TreeNode(data)
        else:
>           self._insert_recursive(self.root, data)
E           AttributeError: 'BinarySearchTree' object has no attribute '_insert_recursive'

exercises/practice/binary-search-tree/binary_search_tree.py:20: AttributeError
=========================== short test summary info ============================
FAILED exercises/practice/binary-search-tree/binary_search_tree_test.py::BinarySearchTreeTest::test_can_create_complex_tree
FAILED exercises/practice/binary-search-tree/binary_search_tree_test.py::BinarySearchTreeTest::test_can_sort_complex_tree
FAILED exercises/practice/binary-search-tree/binary_search_tree_test.py::BinarySearchTreeTest::test_can_sort_if_second_number_is_greater_than_first
FAILED exercises/practice/binary-search-tree/binary_search_tree_test.py::BinarySearchTreeTest::test_can_sort_if_second_number_is_same_as_first
FAILED exercises/practice/binary-search-tree/binary_search_tree_test.py::BinarySearchTreeTest::test_can_sort_if_second_number_is_smaller_than_first
FAILED exercises/practice/binary-search-tree/binary_search_tree_test.py::BinarySearchTreeTest::test_data_is_retained
FAILED exercises/practice/binary-search-tree/binary_search_tree_test.py::BinarySearchTreeTest::test_greater_number_at_right_node
FAILED exercises/practice/binary-search-tree/binary_search_tree_test.py::BinarySearchTreeTest::test_same_number_at_left_node
FAILED exercises/practice/binary-search-tree/binary_search_tree_test.py::BinarySearchTreeTest::test_smaller_number_at_left_node
========================= 9 failed, 1 passed in 0.08s ==========================
