============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.2.0
rootdir: /home/jake/Development/exercism-python
configfile: pytest.ini
plugins: mock-3.11.1, reportlog-0.4.0, repeat-0.9.1
collected 22 items

exercises/practice/sublist/sublist_test.py FFFFF.FFFFFF.FFFFFFFF.        [100%]

=================================== FAILURES ===================================
_____________________ SublistTest.test_at_end_of_superlist _____________________

self = <sublist_test.SublistTest testMethod=test_at_end_of_superlist>

    def test_at_end_of_superlist(self):
>       self.assertEqual(sublist([0, 1, 2, 3, 4, 5], [3, 4, 5]), SUPERLIST)

exercises/practice/sublist/sublist_test.py:54: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list_one = [0, 1, 2, 3, 4, 5], list_two = [3, 4, 5]

    def sublist(list_one, list_two):
        if list_one == list_two:
            return EQUAL
>       elif is_sublist(list_one, list_two):
E       NameError: name 'is_sublist' is not defined

exercises/practice/sublist/sublist.py:24: NameError
____________________ SublistTest.test_at_start_of_superlist ____________________

self = <sublist_test.SublistTest testMethod=test_at_start_of_superlist>

    def test_at_start_of_superlist(self):
>       self.assertEqual(sublist([0, 1, 2, 3, 4, 5], [0, 1, 2]), SUPERLIST)

exercises/practice/sublist/sublist_test.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list_one = [0, 1, 2, 3, 4, 5], list_two = [0, 1, 2]

    def sublist(list_one, list_two):
        if list_one == list_two:
            return EQUAL
>       elif is_sublist(list_one, list_two):
E       NameError: name 'is_sublist' is not defined

exercises/practice/sublist/sublist.py:24: NameError
_________________________ SublistTest.test_consecutive _________________________

self = <sublist_test.SublistTest testMethod=test_consecutive>

    def test_consecutive(self):
>       self.assertEqual(sublist([1, 1, 2], [0, 1, 1, 1, 2, 1, 2]), SUBLIST)

exercises/practice/sublist/sublist_test.py:36: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list_one = [1, 1, 2], list_two = [0, 1, 1, 1, 2, 1, ...]

    def sublist(list_one, list_two):
        if list_one == list_two:
            return EQUAL
>       elif is_sublist(list_one, list_two):
E       NameError: name 'is_sublist' is not defined

exercises/practice/sublist/sublist.py:24: NameError
_______________________ SublistTest.test_different_lists _______________________

self = <sublist_test.SublistTest testMethod=test_different_lists>

    def test_different_lists(self):
>       self.assertEqual(sublist([1, 2, 3], [2, 3, 4]), UNEQUAL)

exercises/practice/sublist/sublist_test.py:30: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list_one = [1, 2, 3], list_two = [2, 3, 4]

    def sublist(list_one, list_two):
        if list_one == list_two:
            return EQUAL
>       elif is_sublist(list_one, list_two):
E       NameError: name 'is_sublist' is not defined

exercises/practice/sublist/sublist.py:24: NameError
______________ SublistTest.test_empty_list_within_non_empty_list _______________

self = <sublist_test.SublistTest testMethod=test_empty_list_within_non_empty_list>

    def test_empty_list_within_non_empty_list(self):
>       self.assertEqual(sublist([], [1, 2, 3]), SUBLIST)

exercises/practice/sublist/sublist_test.py:21: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list_one = [], list_two = [1, 2, 3]

    def sublist(list_one, list_two):
        if list_one == list_two:
            return EQUAL
>       elif is_sublist(list_one, list_two):
E       NameError: name 'is_sublist' is not defined

exercises/practice/sublist/sublist.py:24: NameError
_________________________ SublistTest.test_false_start _________________________

self = <sublist_test.SublistTest testMethod=test_false_start>

    def test_false_start(self):
>       self.assertEqual(sublist([1, 2, 5], [0, 1, 2, 3, 1, 2, 5, 6]), SUBLIST)

exercises/practice/sublist/sublist_test.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list_one = [1, 2, 5], list_two = [0, 1, 2, 3, 1, 2, ...]

    def sublist(list_one, list_two):
        if list_one == list_two:
            return EQUAL
>       elif is_sublist(list_one, list_two):
E       NameError: name 'is_sublist' is not defined

exercises/practice/sublist/sublist.py:24: NameError
____ SublistTest.test_first_list_missing_additional_digits_from_second_list ____

self = <sublist_test.SublistTest testMethod=test_first_list_missing_additional_digits_from_second_list>

    def test_first_list_missing_additional_digits_from_second_list(self):
>       self.assertEqual(sublist([1, 2], [1, 22]), UNEQUAL)

exercises/practice/sublist/sublist_test.py:63: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list_one = [1, 2], list_two = [1, 22]

    def sublist(list_one, list_two):
        if list_one == list_two:
            return EQUAL
>       elif is_sublist(list_one, list_two):
E       NameError: name 'is_sublist' is not defined

exercises/practice/sublist/sublist.py:24: NameError
_________ SublistTest.test_first_list_missing_element_from_second_list _________

self = <sublist_test.SublistTest testMethod=test_first_list_missing_element_from_second_list>

    def test_first_list_missing_element_from_second_list(self):
>       self.assertEqual(sublist([1, 3], [1, 2, 3]), UNEQUAL)

exercises/practice/sublist/sublist_test.py:57: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list_one = [1, 3], list_two = [1, 2, 3]

    def sublist(list_one, list_two):
        if list_one == list_two:
            return EQUAL
>       elif is_sublist(list_one, list_two):
E       NameError: name 'is_sublist' is not defined

exercises/practice/sublist/sublist.py:24: NameError
___________________ SublistTest.test_in_middle_of_superlist ____________________

self = <sublist_test.SublistTest testMethod=test_in_middle_of_superlist>

    def test_in_middle_of_superlist(self):
>       self.assertEqual(sublist([0, 1, 2, 3, 4, 5], [2, 3]), SUPERLIST)

exercises/practice/sublist/sublist_test.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list_one = [0, 1, 2, 3, 4, 5], list_two = [2, 3]

    def sublist(list_one, list_two):
        if list_one == list_two:
            return EQUAL
>       elif is_sublist(list_one, list_two):
E       NameError: name 'is_sublist' is not defined

exercises/practice/sublist/sublist.py:24: NameError
________________________ SublistTest.test_inner_spaces _________________________

self = <sublist_test.SublistTest testMethod=test_inner_spaces>

    def test_inner_spaces(self):
>       self.assertEqual(sublist(["a c"], ["a", "c"]), UNEQUAL)

exercises/practice/sublist/sublist_test.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list_one = ['a c'], list_two = ['a', 'c']

    def sublist(list_one, list_two):
        if list_one == list_two:
            return EQUAL
>       elif is_sublist(list_one, list_two):
E       NameError: name 'is_sublist' is not defined

exercises/practice/sublist/sublist.py:24: NameError
_________________________ SublistTest.test_large_lists _________________________

self = <sublist_test.SublistTest testMethod=test_large_lists>

    def test_large_lists(self):
        self.assertEqual(
>           sublist(
                list(range(1000)) * 1000 + list(range(1000, 1100)),
                list(range(900, 1050)),
            ),
            SUPERLIST,
        )

exercises/practice/sublist/sublist_test.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list_one = [0, 1, 2, 3, 4, 5, ...]
list_two = [900, 901, 902, 903, 904, 905, ...]

    def sublist(list_one, list_two):
        if list_one == list_two:
            return EQUAL
>       elif is_sublist(list_one, list_two):
E       NameError: name 'is_sublist' is not defined

exercises/practice/sublist/sublist.py:24: NameError
_____________ SublistTest.test_non_empty_list_contains_empty_list ______________

self = <sublist_test.SublistTest testMethod=test_non_empty_list_contains_empty_list>

    def test_non_empty_list_contains_empty_list(self):
>       self.assertEqual(sublist([1, 2, 3], []), SUPERLIST)

exercises/practice/sublist/sublist_test.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list_one = [1, 2, 3], list_two = []

    def sublist(list_one, list_two):
        if list_one == list_two:
            return EQUAL
>       elif is_sublist(list_one, list_two):
E       NameError: name 'is_sublist' is not defined

exercises/practice/sublist/sublist.py:24: NameError
___________________ SublistTest.test_order_matters_to_a_list ___________________

self = <sublist_test.SublistTest testMethod=test_order_matters_to_a_list>

    def test_order_matters_to_a_list(self):
>       self.assertEqual(sublist([1, 2, 3], [3, 2, 1]), UNEQUAL)

exercises/practice/sublist/sublist_test.py:66: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list_one = [1, 2, 3], list_two = [3, 2, 1]

    def sublist(list_one, list_two):
        if list_one == list_two:
            return EQUAL
>       elif is_sublist(list_one, list_two):
E       NameError: name 'is_sublist' is not defined

exercises/practice/sublist/sublist.py:24: NameError
______________ SublistTest.test_same_digits_but_different_numbers ______________

self = <sublist_test.SublistTest testMethod=test_same_digits_but_different_numbers>

    def test_same_digits_but_different_numbers(self):
>       self.assertEqual(sublist([1, 0, 1], [10, 1]), UNEQUAL)

exercises/practice/sublist/sublist_test.py:69: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list_one = [1, 0, 1], list_two = [10, 1]

    def sublist(list_one, list_two):
        if list_one == list_two:
            return EQUAL
>       elif is_sublist(list_one, list_two):
E       NameError: name 'is_sublist' is not defined

exercises/practice/sublist/sublist.py:24: NameError
_________ SublistTest.test_second_list_missing_element_from_first_list _________

self = <sublist_test.SublistTest testMethod=test_second_list_missing_element_from_first_list>

    def test_second_list_missing_element_from_first_list(self):
>       self.assertEqual(sublist([1, 2, 3], [1, 3]), UNEQUAL)

exercises/practice/sublist/sublist_test.py:60: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list_one = [1, 2, 3], list_two = [1, 3]

    def sublist(list_one, list_two):
        if list_one == list_two:
            return EQUAL
>       elif is_sublist(list_one, list_two):
E       NameError: name 'is_sublist' is not defined

exercises/practice/sublist/sublist.py:24: NameError
_______________________ SublistTest.test_spread_sublist ________________________

self = <sublist_test.SublistTest testMethod=test_spread_sublist>

    def test_spread_sublist(self):
        self.assertEqual(
>           sublist(list(range(3, 200, 3)), list(range(15, 200, 15))), UNEQUAL
        )

exercises/practice/sublist/sublist_test.py:89: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list_one = [3, 6, 9, 12, 15, 18, ...], list_two = [15, 30, 45, 60, 75, 90, ...]

    def sublist(list_one, list_two):
        if list_one == list_two:
            return EQUAL
>       elif is_sublist(list_one, list_two):
E       NameError: name 'is_sublist' is not defined

exercises/practice/sublist/sublist.py:24: NameError
_______________________ SublistTest.test_sublist_at_end ________________________

self = <sublist_test.SublistTest testMethod=test_sublist_at_end>

    def test_sublist_at_end(self):
>       self.assertEqual(sublist([3, 4, 5], [0, 1, 2, 3, 4, 5]), SUBLIST)

exercises/practice/sublist/sublist_test.py:45: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list_one = [3, 4, 5], list_two = [0, 1, 2, 3, 4, 5]

    def sublist(list_one, list_two):
        if list_one == list_two:
            return EQUAL
>       elif is_sublist(list_one, list_two):
E       NameError: name 'is_sublist' is not defined

exercises/practice/sublist/sublist.py:24: NameError
______________________ SublistTest.test_sublist_at_start _______________________

self = <sublist_test.SublistTest testMethod=test_sublist_at_start>

    def test_sublist_at_start(self):
>       self.assertEqual(sublist([0, 1, 2], [0, 1, 2, 3, 4, 5]), SUBLIST)

exercises/practice/sublist/sublist_test.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list_one = [0, 1, 2], list_two = [0, 1, 2, 3, 4, 5]

    def sublist(list_one, list_two):
        if list_one == list_two:
            return EQUAL
>       elif is_sublist(list_one, list_two):
E       NameError: name 'is_sublist' is not defined

exercises/practice/sublist/sublist.py:24: NameError
______________________ SublistTest.test_sublist_in_middle ______________________

self = <sublist_test.SublistTest testMethod=test_sublist_in_middle>

    def test_sublist_in_middle(self):
>       self.assertEqual(sublist([2, 3, 4], [0, 1, 2, 3, 4, 5]), SUBLIST)

exercises/practice/sublist/sublist_test.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list_one = [2, 3, 4], list_two = [0, 1, 2, 3, 4, 5]

    def sublist(list_one, list_two):
        if list_one == list_two:
            return EQUAL
>       elif is_sublist(list_one, list_two):
E       NameError: name 'is_sublist' is not defined

exercises/practice/sublist/sublist.py:24: NameError
=========================== short test summary info ============================
FAILED exercises/practice/sublist/sublist_test.py::SublistTest::test_at_end_of_superlist
FAILED exercises/practice/sublist/sublist_test.py::SublistTest::test_at_start_of_superlist
FAILED exercises/practice/sublist/sublist_test.py::SublistTest::test_consecutive
FAILED exercises/practice/sublist/sublist_test.py::SublistTest::test_different_lists
FAILED exercises/practice/sublist/sublist_test.py::SublistTest::test_empty_list_within_non_empty_list
FAILED exercises/practice/sublist/sublist_test.py::SublistTest::test_false_start
FAILED exercises/practice/sublist/sublist_test.py::SublistTest::test_first_list_missing_additional_digits_from_second_list
FAILED exercises/practice/sublist/sublist_test.py::SublistTest::test_first_list_missing_element_from_second_list
FAILED exercises/practice/sublist/sublist_test.py::SublistTest::test_in_middle_of_superlist
FAILED exercises/practice/sublist/sublist_test.py::SublistTest::test_inner_spaces
FAILED exercises/practice/sublist/sublist_test.py::SublistTest::test_large_lists
FAILED exercises/practice/sublist/sublist_test.py::SublistTest::test_non_empty_list_contains_empty_list
FAILED exercises/practice/sublist/sublist_test.py::SublistTest::test_order_matters_to_a_list
FAILED exercises/practice/sublist/sublist_test.py::SublistTest::test_same_digits_but_different_numbers
FAILED exercises/practice/sublist/sublist_test.py::SublistTest::test_second_list_missing_element_from_first_list
FAILED exercises/practice/sublist/sublist_test.py::SublistTest::test_spread_sublist
FAILED exercises/practice/sublist/sublist_test.py::SublistTest::test_sublist_at_end
FAILED exercises/practice/sublist/sublist_test.py::SublistTest::test_sublist_at_start
FAILED exercises/practice/sublist/sublist_test.py::SublistTest::test_sublist_in_middle
========================= 19 failed, 3 passed in 0.14s =========================
